<Quest name="Der Hinterhalt der Untoten" table_name="fissure">
	
	<Init>
	</Init>
	
	<Description>
		if (fissure.finished) then
			return _("Die gute Nachricht: Durch diesen Tunnel kommt niemand mehr. Die schlechte: Den Rückweg hat es auch verschuettet. Hoffentlich gibt es noch einen anderen Ausgang.")
		else
			return _("Die Untoten haben einen Weg unter der Grauen Himmelsleiter gefunden, auf dem sie Zwergentrutz umgehen koennen. Da dies das Königreich Aisen direkt bedroht, muss der Zugang schnellstmoeglich verschlossen werden. Der Durchgang in den Verfluchten Hoelen muss gefunden und mit dem Sprengzauber ireana von Nordenburgs zerstoert werden.")
		end;
	</Description>
	
	<Region name="aisMounPath">
		<Event trigger="create_region" once="true">
			<Condition>
				if(fissure.rescuedIreana~=true)then
					return true;
				else
					return false;
				end;
			</Condition>
			<Effect>
				fissure_tmp.guard1 = createObject("guard", "locGuard1");
				setRefName(fissure_tmp.guard1, "Elementaristenwaechter1");
				setObjectValue(fissure_tmp.guard1,"max_health",1000);
				setObjectValue(fissure_tmp.guard1,"health",100);
				
				fissure_tmp.guard2 = createObject("guard", "locGuard2");
				setRefName(fissure_tmp.guard2, "Elementaristenwaechter2");
				
				
				fissure_tmp.guard3 = createObject("guard", "locGuard3");
				setRefName(fissure_tmp.guard3, "Elementaristenwaechter3");
				
				fissure_tmp.guard4 = createObject("guard", "locGuard4");
				setRefName(fissure_tmp.guard4, "Elementaristenwaechter4");
				
				
				fissure_tmp.dead_guard1 = createObject("guard", "locDeadGuard1");
				setRefName(fissure_tmp.dead_guard1, "Guard");
				setObjectValue(fissure_tmp.dead_guard1,"health",0);
				
				fissure_tmp.dead_guard2 = createObject("guard", "locDeadGuard2");
				setRefName(fissure_tmp.dead_guard2, "Guard");
				setObjectValue(fissure_tmp.dead_guard2,"health",0);
				
				
				fissure_tmp.ireana = createObject("ireana", "locIreana");
				setRefName(fissure_tmp.ireana, "Erzmaga Ireana von Nordenburg");
				setObjectValue(fissure_tmp.ireana,"max_health",10000);
				setObjectValue(fissure_tmp.ireana,"health",3000);
				set(fissure_tmp.ireana,"ai_state","inactive");
				setObjectAnimation(fissure_tmp.ireana,"lie",1000,true);
				
				fissure_tmp.captain = createObject("guard", "locCaptain");
				setRefName(fissure_tmp.captain, "Guardcaptain");
				setObjectValue(fissure_tmp.captain,"max_health",10000);
				setObjectValue(fissure_tmp.captain,"health",9000);
				addUnitCommand(fissure_tmp.captain,"guard",fissure_tmp.ireana,10,"secondary");
				
				fissure_tmp.tolec = createObject("tolec", "locTolec");
				setRefName(fissure_tmp.tolec, "Tolec");
				addUnitCommand(fissure_tmp.tolec,"guard",fissure_tmp.ireana,10,"secondary");
					
				fissure_tmp.derred = createObject("derred", "locDerred");
				setRefName(fissure_tmp.derred, "Derred");
				addUnitCommand(fissure_tmp.derred,"guard",fissure_tmp.ireana,10,"secondary");
			</Effect>
		</Event>

		<Event trigger ="unit_dead">
			<Condition>
				return (get(trigger.unit,'subtype') == 'guard')
			</Condition>
			<Effect>
				setUnitAction(trigger.unit,"dead",0,600000);
			</Effect>
		</Event>
		
		<Event trigger="player_moved" once="true">
			<Condition>
				if (ambush.started == true and fissure.rescuedIreana ~= true) then
					return (unitIsInArea(trigger.player,"areaHelpIreana"));
				else
					return false;
				end;
			</Condition>
			<Effect>
				fissure_tmp.skeletons={};
				for nr=1,8 do
					fissure_tmp.skeletons[nr] = createObject("fire_skel","locSkeleton"..nr);
				end;
				fissure_tmp.skeletons_nr =9;
				
				setCutsceneMode(true);
				
				timedExecute('addUnitCommand(fissure_tmp.skeletons[1], "fire_shot", fissure_tmp.guard2,0,"repeat")',400);
				timedExecute('addUnitCommand(fissure_tmp.skeletons[2], "fire_shot", fissure_tmp.guard2,0,"repeat")',350);
				timedExecute('addUnitCommand(fissure_tmp.skeletons[3], "fire_shot", fissure_tmp.guard4,0,"repeat")',100);
				timedExecute('addUnitCommand(fissure_tmp.skeletons[4], "fire_shot", fissure_tmp.captain,0,"repeat")',75);
				timedExecute('addUnitCommand(fissure_tmp.skeletons[5], "fire_shot", fissure_tmp.ireana,0,"repeat")', 800);
				timedExecute('addUnitCommand(fissure_tmp.skeletons[6], "fire_shot", fissure_tmp.guard1,0,"repeat")', 650);
				timedExecute('addUnitCommand(fissure_tmp.skeletons[7], "fire_shot", fissure_tmp.guard1,0,"repeat")',523);
				timedExecute('addUnitCommand(fissure_tmp.skeletons[8], "fire_shot", fissure_tmp.guard3,0,"repeat")', 250);
				
				lookAtObject(fissure_tmp.guard1, fissure_tmp.skeletons[6]);
				lookAtObject(fissure_tmp.guard2, fissure_tmp.skeletons[2]);
				lookAtObject(fissure_tmp.guard3, fissure_tmp.skeletons[8]);
				lookAtObject(fissure_tmp.guard4, fissure_tmp.skeletons[3]);
				lookAtObject(fissure_tmp.ireana, fissure_tmp.captain);
				lookAtObject(fissure_tmp.captain, fissure_tmp.ireana);
				
				addCameraPosition(0,get(getPartyleader(),"position"),-50,40,20);
				addCameraPosition(5000,get(fissure_tmp.ireana,"position"),-50,40,20);
				--TODO timer wieder auf 10000
				startTimer('fissure_dialogue1',1000);
			</Effect>
		</Event>
		
		<Topic name="insertion_guard_dies">
			<Effect>
				unitSpeak("W1",_("*urgh*"));
				setObjectValue(fissure_tmp.guard1,"health",0);
			</Effect>
		</Topic>
		
		<Event trigger="fissure_dialogue1">
			<Effect>
				assembleParty("aisMounPath","locPartyEntry");
				fissure_tmp.beforeBattle = true;
			</Effect>
		</Event>
		
		<Event trigger="party_complete">
			<Condition>
				return(fissure_tmp.beforeBattle == true);
			</Condition>
			<Effect>
				addCameraPosition(1000,get(getPartyleader(),"position"),-50,40,20);
				-- Die Party erreicht den Ort des Geschehens. Die Kutsche der Erzmaga
				-- ist verunglueckt, mehrere Skelettbogenschuetzen beschießen sie mit
				-- Feuerpfeilen und die Wachen sind allesamt verwundet.
				
				playersLookAt(getPosition(fissure_tmp.ireana));
				lookAtObject(fissure_tmp.guard1, getPartyleader());

				createDialogue();
				addAllPlayersToDialog();
				
				addSpeaker(fissure_tmp.guard1,"W1");
				addSpeaker(fissure_tmp.soren_windclaw_crystal,"SW");
				addSpeaker(fissure_tmp.ireana,"IvN");
				addSpeaker(fissure_tmp.captain,"HW");
				addSpeaker(fissure_tmp.guard2,"EW");
				addStandardRoles();
				
				speakPause(2000);
				speak("male",_("Wow, she's gorgeous"),"inlove");
				--print(getSpeaker("male"));
				--print(getSpeaker("PL"));
				if((getSpeaker("male")~=0) and (getSpeaker("male")~=getSpeaker("PL")))then
					speak("PL",_("You can stare at her later, we have to erase some undead."), "unhappy");
				end;
				speak("HW",_("Please help us, the maga is badly injured!"), "panic");
				
				-- W1 (Wird toedlich getroffen)
				jumpTopic("insertion_guard_dies");
				
				speakPause(1000);
				speak("waropt",_("He he. Harvest!"),"warcry");
				
				-- Sie kaempfen. Die Untoten warten mit einer etwas unschoenen
				-- ueberraschung auf (starkes Monster) werden aber sicherlich bald
				-- besiegt ;-)
				executeInDialog('insertTrigger("end_cutfissure_fight")');
			</Effect>
		</Event> 
		
		<Event trigger="end_cutfissure_fight">
			<Effect>
				setCutsceneMode(false);
				
				for nr=1,8 do
					clearUnitCommands(fissure_tmp.skeletons[nr]);
				end;
				startTimer("undeadReinforcements",5000);
				--set(fissure_tmp.captain,"state","inactive");
			</Effect>
		</Event>
		
		<Event trigger="undeadReinforcements" once="true">
			<Effect>
				local i,skel;
				for i=1,2 do
					skel = createObject("sword_skel","entry_north");
					addUnitCommand(skel,"attack",fissure_tmp.ireana,nil,"secondary");
					fissure_tmp.skeletons_nr = fissure_tmp.skeletons_nr + 1;
				end;
				for i=1,2 do
					skel = createObject("axe_skel","entry_north");
					addUnitCommand(skel,"attack",fissure_tmp.ireana,nil,"secondary");
					fissure_tmp.skeletons_nr = fissure_tmp.skeletons_nr + 1;
				end;
				for i=1,2 do
					skel = createObject("bow_skel","entry_north");
					addUnitCommand(skel,"attack",fissure_tmp.ireana,nil,"secondary");
					fissure_tmp.skeletons_nr = fissure_tmp.skeletons_nr + 1;
				end;
				startTimer("undeadMonster", 4000);
			</Effect>
		</Event>
		
		<Event trigger="undeadMonster" once="true">
			<Effect>
				local skel = createObject("reaper_skel","entry_north");
				addUnitCommand(skel,"attack",fissure_tmp.ireana,nil,"secondary");
			</Effect>
		</Event>
		
		<Event trigger ="unit_die">
			<Condition>
				-- caught subtypes: bow_skel, sword_skel, axe_skel, fire_skel, reaper_skel
				if((get(trigger.unit,'subtype') == 'bow_skel') or (get(trigger.unit,'subtype') == 'sword_skel') or (get(trigger.unit,'subtype') == 'axe_skel') or (get(trigger.unit,'subtype') == 'fire_skel') or (get(trigger.unit,'subtype') == 'reaper_skel'))then
					return true;
				end;
				return false;
			</Condition>
			<Effect>
				fissure_tmp.skeletons_nr = fissure_tmp.skeletons_nr -1;
				if (fissure_tmp.skeletons_nr == 0) then
				
					if (isCreature(fissure_tmp.guard2)) then
						addUnitCommand(fissure_tmp.guard2, "walk", "locGuard2")
					end;
					if (isCreature(fissure_tmp.guard3)) then
						addUnitCommand(fissure_tmp.guard3, "walk", "locGuard3")
					end;
					if (isCreature(fissure_tmp.guard4)) then
						addUnitCommand(fissure_tmp.guard4, "walk", "locGuard4")
					end;
					
					addUnitCommand(fissure_tmp.tolec, "walk", "locTolec")
					addUnitCommand(fissure_tmp.derred, "walk", "locDerred")
					ambush.afterBattle = true;
					startTimer("fissure_dialogue2",3000);
				end;
			</Effect>
		</Event>
		
		
		
		<Event trigger = "commandComplete" once = "true">
			<Condition>
				return(trigger.unit == fissure.tolec and ambush.afterBattle==true);
			</Condition>
			<Effect>
				lookAt(fissure.tolec,getPartyleader());
			</Effect>
		</Event>
		
		<Event trigger = "commandComplete" once = "true">
			<Condition>
				return(trigger.unit == fissure.derred and ambush.afterBattle==true);
			</Condition>
			<Effect>
				lookAt(fissure.derred,getPartyleader());
			</Effect>
		</Event>
		
		<Event trigger = "fissure_dialogue2">
			<Effect>
				assembleParty("aisMounPath","locParty");
				fissure_tmp.afterBattle = true;
			</Effect>
		</Event>
		
		<Event trigger="party_complete">
			<Condition>
				return (fissure_tmp.afterBattle==true);
			</Condition>
			<Effect>
				--gespraech nach dem Kampf mit den Untoten
				set(fissure_tmp.captain,"state","active");

				fissure_tmp.soren_windclaw_crystal = createObject("sorenCrystal", "locDeadSkeleton4");
				setRefName(fissure_tmp.soren_windclaw_crystal, "Soren Windclaw");
				setObjectValue(fissure_tmp.soren_windclaw_crystal,"max_health",10000);
				setObjectValue(fissure_tmp.soren_windclaw_crystal,"health",10000);
				
				
				
				createDialogue();
				addSpeaker(fissure_tmp.soren_windclaw_crystal,"SW");
				addSpeaker(fissure_tmp.ireana,"IvN",true);
				addSpeaker(fissure_tmp.captain,"HW",true);
				addSpeaker(fissure_tmp.tolec,"TO",true);
				addSpeaker(fissure_tmp.derred,"DE",true);
				addAllPlayersToDialog();
				addStandardRoles();
				
				setCutsceneMode(true);
					
				addCameraPosition(0,get(getSpeaker("PL"),"position"),-50,40,10);
				
				playersLookAt(getPosition(fissure_tmp.ireana));
				lookAtObject(fissure_tmp.soren_windclaw_crystal, fissure_tmp.ireana);
				lookAtObject(fissure_tmp.captain, getSpeaker("PL"));
				
				speak("HW",_("I have never seen someone fight like you before."), "surprised");
				speak("mage",_("You don't get out very often, do you."),"sneer");
				if(solo())then
					speak("TO",_("Ihr habt euch praechtig entwickelt, seit wir uns das letzte Mal gesehen haben, oder? _solo"),"grin");
				else
					speak("TO",_("Ihr habt euch praechtig entwickelt, seit wir uns das letzte Mal gesehen haben, oder?"),"grin");
				end;
				setSpeakerEmotion("TO", "normal");
				speak("PL",_("How is the archmaga?"),"thoughtful");
				
				speak("HW",_("Very bad, I'm afraid."),"sad");
				
				local itempos,currentPlayer;
				local mage = getSpeaker("mage");
				local leader = getSpeaker("PL");
				
				if(getSpeaker("priest") ~=0)then
					speak("priest",_("Let me see. _priest"),"normal");
					executeInDialog("addUnitCommand(getSpeaker('priest'),'heal',fissure_tmp.ireana)");
					setObjectValue(fissure_tmp.ireana,"health",10000);
				elseif((mage~=0) and (hasItem(mage,"heal_1") or hasItem(mage,"heal_2")))then
					-- Magier geht zu ireana und heilt sie mit einem Trank
					speak("mage",_("Let me see. _mage"),"normal");
					fissure_tmp.mPos = get(mage,"position");
					executeInDialog("addUnitCommand("..mage..",'walk', fissure_tmp.ireana,1)");
					speak("mage",(""),"normal","1000");
					if(not findAndRemoveItem(mage,"heal_1"))then
						findAndRemoveItem(mage,"heal_2");
					end;
					--TODO kosmetische Animation: hinknien und Trank verabreichen
					setObjectValue(fissure_tmp.ireana,"health",10000);
					executeInDialog("addUnitCommand("..mage..",'walk', fissure_tmp.mPos)");
					speak("mage",(""),"normal","1500");
					executeInDialog("lookAtObject("..mage..",fissure_tmp.ireana)");
				else
					--Partyleader heilt ireana mit einem Trank, auch wenn er keinen besitzt
					speak("PL",_("Let me see."),"normal");
					fissure_tmp.mPos = get(leader,"position");
					executeInDialog("addUnitCommand("..leader..",'walk', fissure_tmp.ireana,1)");
					speak("PL",(""),"normal","1000");
					if(not findAndRemoveItem(leader,"heal_1"))then
						findAndRemoveItem(leader,"heal_2");
					end;
					--TODO kosmetische Animation: hinknien und Trank verabreichen
					setObjectValue(fissure_tmp.ireana,"health",10000);
					executeInDialog("addUnitCommand("..leader..",'walk', fissure_tmp.mPos)");
					speak("PL",(""),"normal","1500");
					executeInDialog("lookAtObject("..leader..",fissure_tmp.ireana)");
				end;
				setSpeakerAnimation("IvN","getUp",1000);
				executeInDialog('lookAtObject('..fissure_tmp.ireana..', getSpeaker("PL"))');
				executeInDialog('set('..fissure_tmp.ireana..',"ai_state","inactive")');
				speak("IvN",_("Thank you. That was a close call for a rescue."),"inlove");
				speak("PL",_("How could it even come to this?"),"unhappy");
				speak("PL",_("It's very dangerous to travel so far from the roads."));
				
				if((getSpeaker("warrior")~=getSpeaker("PL")) and (getSpeaker("warrior")~=0))then
					speak("warrior",_("Come off it!"),"unhappy");
					speak("IvN",_("No, no, it's the truth."),"sad");
				end;

				speak("IvN",_("It was not the best idea, but the streets are not safe these days and thus we wanted to travel concealed."),"normal");
				speak("HW",_("These undead layed an ambush for us here."),"angry");
				speak("arcopt",_("Surprise!"),"sneer");
				speak("arcopt",_("No wonder, this is combat area."));
				setSpeakerEmotion("arcopt","normal");
				speak("HW",_("No, Dwarfenwall hasn't fallen yet."),"thoughtful");
				speak("HW",_("As long as that city stands, the entry to the lands of the undead is blocked."));
				speak("HW",_("But I fear they must have found a way around the citywalls."), "sad");
				speak("IvN",_("We mustn't allow this."), "unhappy");
				speak("IvN",_("If those monsters could avoid Dwarfenwall they would advance into Aisen before one week is gone."));
				speak("SW",_("It was exeedingly careless of you to leave with so few men."), "grin");
				speak("IvN",_("The city needs every man it can get!"),"angry");
				speak("PL",_("I have a feeling what's going to come in a moment..."), "bored");
				if(solo())then
					speak("SW",_("Listen, Branded One!"),"normal");
					speak("HW",_("What?!?"),"surprise");
					speak("HW",_("That's a Branded One?"),"fear");
					speak("IvN",_("Let it go."),"aloof");
					if(femaleOnly())then
						speak("IvN",_("She is on our side."),"happy");
					else
						speak("IvN",_("He is on our side."),"happy");
					end;
				else
					speak("SW",_("Listen, Branded Ones!"),"normal");
					speak("HW",_("What?!?"),"surprise");
					speak("HW",_("Those are Branded Ones?"),"fear");
					speak("IvN",_("Let it go."),"aloof");
					speak("IvN",_("They are on our side."),"happy");
				end;
				
				speak("SW",_("Find the way the undead came here and render it useless."));
				speak("archer", _("Wird das extra bezahlt?"),"amused")
				speak("IvN",_("Don't you want to give them some backup?"),"surprise");
				speak("SW",_("I can do what I want!"),"unhappy");
				speak("PL",_("Of course..."),"bored");
				speak("magopt",_("Slowly he's getting to me..."),"angry");
				if(getSpeaker("magopt") ~= getSpeaker("waropt"))then
					speak("waropt",_("Only now?"),"surprise");
					speak("mage",_("Mages have to be naturally patient."),"aloof");
				end;
				speak("IvN",_("I'm sure the undead found a hidden cave."),"thoughtful");
				speak("IvN",_("Please take this explosion spell."),"normal");
				speak("IvN",_("It surely will be useful."));
				speak("HW",_("I know of a cave system north of here."),"normal");
				speak("HW",_("They say it's cursed."),"threaten");
				if(solo())then
					speak("arcopt",_("Should that frighten me?"),"sneer");
				else
					speak("arcopt",_("Should that frighten us?"),"sneer");
				end;
				speak("HW",_("..."),"offended","1500");
				speak("HW",_("probably not."),"normal");
				speak("PL",_("Thanks for your help."),"normal");
				speak("IvN",_("Good luck!"),"sad");
				speak("IvN",_("I hope we meet again soon."),"happy");
				
				-- Hauptquest: Findet den Weg, auf dem die Untoten die Stadt umgehen
				
				executeInDialog('insertTrigger("end_cutfissure")');
			</Effect>
		</Event>
		
		<Event trigger="end_cutfissure">
			<Effect>
				ambush.finished=true;
				fissure.rescuedIreana = true;
				fissure.started = true;
				timedExecute("setCutsceneMode(false);",1000);
				deleteObject(fissure_tmp.soren_windclaw_crystal);
			</Effect>
		</Event>

	</Region>
	
	<Region name="greyCurseCaveFis">
		<Event trigger="create_region">
			<Condition>
				return (fissure.finished ~=true);
			</Condition>
			<Effect>
				fissure_tmp.stone1=getObjectByNameRef("fissureBlock3");
				--Blöcke ausblenden
				fissure_tmp.necromancer = createObject("necromancer","locNecromancer",190);
				fissure_tmp.worker1 = createObject("worker_skel","locSkeleton1",-90);
				--arbeiterSkelette erschaffen
			</Effect>
		</Event>
	
		<Event trigger="enter_region" once="true">
			<Condition>
				return (fissure.finished ~=true);
			</Condition>
			<Effect>
				assembleParty("greyCurseCaveFis","locParty");
				setCutsceneMode(true);
				addCameraPosition(0,"locNecromancer",-90,45,10);
			</Effect>
		</Event>
	</Region>
</Quest>

