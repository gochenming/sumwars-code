<Quest name="The Ambush" table_name="ambush">
	<Description>
		if (ambush.finished) then
			return _("Ireana hat es ueberlebt und vor lauter Dankbarkeit gleich fuer den naechsten Auftrag gesorgt. Ich wusste ja schon immer, dass die Konziliker nur einen Kammerjaeger wollten.")
		else
			return _("Eine Konzilsmagierin namens Ireana von Nordenburg steckt anscheinend westlich von Zwergentrutz in Schwierigkeiten. Nichts, was ein Gezeichneter nicht loesen koennte. Wenn sie lange genug ueberlebt...")
		end
	</Description>
	
	<Region name="aisWolfstones">
		
		<Event trigger="create_region" once="true">
			<Effect>
				--area am Nordausgang erstellen
				addArea('northernExit',{'rect','entry_north',{12,8}});
			</Effect>
		</Event>
		
		<Event trigger="player_moved">
			<Condition>
				return unitIsInArea(trigger.player,"northernExit")
			</Condition>
			<Effect>
				unitSpeak(trigger.player,_("Da geht es Richtung Zwergentrutz. Ich sollte noch nicht dort entlang."),"thoughtful");
				addUnitCommand(trigger.player,"walk","entry_south");
				startTimer("cancelCommand","1000");
				addTriggerVariable("player",trigger.player);
			</Effect>
		</Event>
		
		<Event trigger="cancelCommand">
			<Effect>
				clearUnitCommands(trigger.player);
			</Effect>
		</Event>
		
		<Event trigger="enter_region">
			<Condition>
				return((trigger.player == getPartyleader())and (ambush.started ~= true));
			</Condition>
			<Effect>
				ambush.leaderInRegion = true;
				startTimer("callForHelp",15000);
			</Effect>
		</Event>
		
		<Event trigger="leave_region">
			<Condition>
				return((trigger.player == getPartyleader())and (ambush.finished ~= true))
			</Condition>
			<Effect>
				ambush.leaderInRegion = false;
			</Effect>
		</Event>
		
		<Event trigger="callForHelp" once="true">
			<Condition>
				return ambush.leaderInRegion;
			</Condition>
			<Effect>
				setCutsceneMode(true);
				ambush_tmp.party = get(getPlayers()[1],"position");
				getNextTileCenter(ambush_tmp.party)
				addLocation("locCrystal",ambush_tmp.party);
				ambush_tmp.partyLoc = {0,3.5};
				if(solo() or (not solo() and (getPlayers[3]==nil)))then
					ambush_tmp.partyLoc = {0,2};
				end;
				vecadd(ambush_tmp.partyLoc,getLocation("locCrystal"));
				addLocation("locParty",ambush_tmp.partyLoc);
				addCameraPosition(0,"locCrystal",-80,60, 17);
				assembleParty("aisWolfstones","locParty");
				ambush_tmp.theCall = true;
			</Effect>
		</Event>
		
		<Event trigger="party_complete" once="true">
			<Condition>
				return ambush_tmp.theCall == true;
			</Condition>
			<Effect>
				ambush_tmp.theCall = false;
				
				if(solo() or (not solo() and getPlayers()[3] == nil))then
					 groupObjectsArc(getPlayers(),"locParty","locCrystal",nil,90);
				else
					groupObjectsArc(getPlayers(),"locParty","locCrystal",nil,360);
				end;

				playersLookAt("locCrystal");
				ambush_tmp.soren = createObject("sorenCrystal","locCrystal");
				addUnitCommand(ambush_tmp.soren,"freezingDeath",ambush_tmp.party);
				createDialogue();
				addAllPlayersToDialog();
				addStandardRoles();
				addSpeaker(ambush_tmp.soren,"Soren Windclaw");
				
				if (solo())then
					speak("Soren Windclaw",_("Warte!"),"sad",2500);
					speak("PL",_("Ich beeile mich ja schon!"),"unhappy");
					speak("Soren Windclaw",_("Du musst jetzt sofort durch die westlichen Wälder."),"unhappy");
				else
					speak("PL",_("Wir beeilen uns ja schon!"),"unhappy");
					speak("Soren Windclaw",_("Ihr muesst jetzt sofort durch die westlichen Wälder."),"unhappy");
				end;
					speak("Soren Windclaw",_("Die Verlobte des Prinzen ist in Gefahr."));
					speak("any",_("Wer?"),"surprised");
					speak("Soren Windclaw",_("Die Erzmaga Ireana von Nordenburg."),"sad");
					speak("archer",_("Wird das extra bezahlt?"),"surprised");
				if(getSpeaker("archer")~=getSpeaker("magopt"))then
					speak("magopt",_("Wie bitte?"),"thoughtful");
					speak("magopt",_("Ich dachte das wäre eine von euren tollen Elementaristenamazonen, kann die nicht auf sich selbst aufpassen?"),"bored");
				end;
				if(solo())then
					speak("Soren Windclaw",_("Jetzt fang nicht an zu diskutieren, sondern hilf ihr! Sie braucht deine Hilfe!"),"pain");
					setSpeakerEmotion("Soren Windclaw","unhappy");
				else
					speak("Soren Windclaw",_("Jetzt fangt nicht an zu diskutieren, sondern helft ihr! Sie braucht eure Hilfe!"),"pain");
					setSpeakerEmotion("Soren Windclaw","unhappy");
					if(duo())then
						speak("PL",_("Was meinst du, wollen wir da jemandem aus der Patsche helfen?"),"amused");
						if(getSpeaker("magopt")~=getSpeaker("PL"))then
							speak("magopt", _("Weiß nicht so genau..."),"bored");
						elseif(getSpeaker("PL")~=getSpeaker("waropt"))then
							speak("waropt", _("Naja, schaden kann das ja eigentlich nicht..."),"thoughtful");
						end;
						if(getSpeaker("PL")~=getSpeaker("archer"))then
							speak("archer",_("Wird das extra bezahlt??"),"thoughtful");
						end;
						speak("Soren Windclaw",_("Argh! Muss ich euch erst-"),"angry");
						speak("PL",_("Schon gut, spare deinen Atem,!"),"aloof");
					end;
					speak("PL",_("Was meint ihr Freunde, wollen wir da jemandem aus der Patsche helfen?"),"amused");
					if(getSpeaker("magopt")~=getSpeaker("PL"))then
						speak("magopt", _("Weiß nicht so genau..."),"bored");
					end;
					if(getSpeaker("magopt")~=getSpeaker("waropt"))then
						speak("waropt", _("Naja, schaden kann das ja eigentlich nicht..."),"thoughtful");
					end;
					speak("archer",_("Wird das extra bezahlt??"),"thoughtful");
					speak("Soren Windclaw",_("Argh! Muss ich euch erst-"),"angry");
					speak("PL",_("Schon gut, spare deinen Atem,!"),"aloof");
				end;
					speak("PL",_("Die Feuerwehr ist ja schon unterwegs."),"sneer");
					executeInDialog("insertTrigger('speechFinished')");
			</Effect>
		</Event>
			
		<Event trigger="speechFinished" once="true">
			<Effect>
				setCutsceneMode(false);
				ambush.started=true;
				deleteObject(ambush_tmp.soren);
			</Effect>
		</Event>
	</Region>
</Quest>