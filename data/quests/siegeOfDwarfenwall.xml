<Quest name="Defend dwarfenwall" table_name="defend_dwall">
	<Description>
		if (defend_dwall.finished) then
			return _("Quest finished")
		else
			return _("Quest description")
		end
	</Description>

	<Region name="dwarfenwall">
		<Event trigger="enter_region" once="true">
			<Condition>
				return (defend_dwall.visitedDWall ~= true);
			</Condition>
			<Effect>
				assembleParty("dwarfenwall","entry_west");
				setCutsceneMode(true);
				addCameraPosition(0,"entry_west",-60, 65, 12);
				addCameraPosition(2000,"entry_west",-60, 65, 18);
				addCameraPosition(9000, "locWay1", -120, 65, 32);
				addCameraPosition(8000, "exit_command", 180, 35, 8);
				addCameraPosition(1500, "exit_command", 180, 35, 8);
			</Effect>
		</Event>
		<Event trigger="all_camera_moves_complete" once="true">
			<Effect>
				defend_dwall.visitedDWall = true;
				setCutsceneMode(false);
			</Effect>
		</Event>
		
		
	</Region>
	
	<Region name="dwarfenwallCommand">
		<Event trigger="create_region" once="true">
			<Condition>
				return (defend_dwall.briefingFinished ~= true)
			</Condition>
			<Effect>
				setCutsceneMode(true);
				addCameraPosition(0,"locCamera",-90,55,14);
				defend_dwall_tmp.position="command";
				assembleParty("dwarfenwallCommand", entry_south);
				lookAtEachOther(dwarfenwall.general,dwarfenwall.council);
			</Effect>
		</Event>
		
		<Event trigger="party_complete" once="true">
			<Condition>
				return (defend_dwall_tmp.position=="command")
			</Condition>
			<Effect>
				initDialog();
				
				addSpeaker(dwarfenwall.general, "general");
				addSpeaker(dwarfenwall.council, "council");
				
				setSpeakerPosition("council","upper_left");
				speak("council",_("...haben meine Windelementare genau gesehen: Es ist nur dieser eine Lich, der sie fuehrt."),"thoughtful");
				speak("council",_("Wenn er erst mal weg ist, sind die anderen kein Problem."),"unhappy");
				speak("general",_("Wie großartig."),"amused");
				speak("general",_("Und mit welcher Armee wollt ihr ihre Reihen durchbrechen?"),"unhappy");
				speak("general",_("Wir muessen erst mal diesen Ansturm aufhalten, der sich da zusammenbraut."),"unhappy");
				speak("council",_("Keine Sorge."),"normal")
				speak("council",_("Mein Kollege hat mir versichert, dass das Konzil Unterstuetzung sendet."),"normal")
				speak("council",_("Sie muesste bald hier sein."),"normal")
				setSpeakerAnimation("general","angry",800);
				speak("general",_("Erst beordern sie die Maga von Nordenburg ab und dann senden sie wieder Verstaerkung?"),"angry");
				speak("general",_("Was ist das für ein Spiel?"),"unhappy");
				speak("council",_("Die Maga wird an anderer Stelle dringender benoetigt als bei uns."),"aloof");
				speak("general",_("Aber natuerlich!"),"sneer");
				speak("general",_("Auch wenn ich das nur ungern sage, aber bis eine Armee den Weg hier her geschafft hat, kaempfen unsere Koerper laengst für die andere Seite, verehrte Dame!"),"unhappy");
				changeTopic("entryParty");
			</Effect>
		</Event>
		
		<Event trigger="entryParty">
			<Effect>
				addUnitCommand(getPartyleader(),"walk","locLeader");
				addCameraPosition(1500,"locCamera",-90,60,20);
				speak("PL",_("Verzeiht wenn ich mich so einfach einmische, aber kleine Gruppen reisen erheblich schneller als ein Heerzug."),"normal");
				executeInDialog('lookAtObject('..dwarfenwall.general..','..getSpeaker("PL")..')');
				if(solo())then
					speak("general",_("Und wer seid Ihr? _solo"),"threaten");
				else
					speak("general",_("Und wer seid ihr?"),"threaten");
				end;
				speak("PL",_("Die Verstaerkung"),"amused");
				
				setSpeakerEmotion("general","happy");
				setSpeakerAnimation("general","laugh",800);
				setSpeakerEmotion("PL","normal");
				speakPause(800);
				
				speak("general",_("Guter Witz."),"unhappy");
				speak("general",_("Aber wir sind hier im Krieg."),"unhappy");
				if(solo() and maleOnly())then
					speak("general",_("Macht, dass ihr davonkommt, ihr Narr."),"unhappy");
				elseif(solo())then
					speak("general",_("Macht, dass ihr davonkommt, ihr Naerrin."),"unhappy");
				else
					speak("general",_("Macht, dass ihr davonkommt, ihr Narren."),"unhappy");
				end;
				executeInDialog('lookAtObject('..dwarfenwall.general..','..dwarfenwall.council..')');
				
				if(isMale(getSpeaker("PL")))then
					speak("council",_("Dieser Soeldner sagt die Wahrheit."),"aloof");
				else
					speak("council",_("Diese Soeldnerin sagt die Wahrheit."),"aloof");
				end;
				
				speak("general",_("Was?!?"),"pain");
				executeInDialog('lookAtObject('..dwarfenwall.general..','..getSpeaker("PL")..')');
				setSpeakerAnimation("general","point",800);
				speakPause(800);
				setSpeakerAnimation("general","pointing",100,true);
				speak("general",_("Das soll eure grandiose Unterstützung sein?"),"angry");
				setSpeakerAnimation("general","angry",800);
				if(not solo())then
					speak("general",_("Eine Handvoll Soeldlinge?"),"offended");
				end;
				
				speak("council",_("Ihr werdet den Wert unserer Unterstuetzung schon noch erkennen, wenn sie wieder und wieder fuer euch faellt."),"aloof");
				speak("general",_("Was sagt ihr da?"),"unhappy");
				setSpeakerAnimation("general","think",1000);
				speakPause("1000");
				if(solo() and femaleOnly())then
					speak("general",_("... Ist das etwa eine Verfluchte?"),"pain");
				elseif(solo())then
					speak("general",_("... Ist das etwa ein Verfluchter?"),"pain");
				else
					speak("general",_("... Sind das etwa Verfluchte?"),"pain");
				end;
				setSpeakerAnimation("general","aloof");
				speak("any",_("Mir persoenlich gefaellt der Begriff Gezeichnete irgendwie besser."),"unhappy");
				
				setSpeakerEmotion("any","aloof");
				if(solo())then
					speak("PL",_("Wenn der Preis stimmt, lasse ich mich so oft in Stuecke hacken, wie es noetig ist, um diese Stadt zu verteidigen."),"aloof");
				else
					speak("PL",_("Wenn der Preis stimmt, lassen wir uns so oft in Stuecke hacken, wie es noetig ist, um diese Stadt zu verteidigen."),"aloof");
				end;
				
				executeInDialog('lookAtObject('..dwarfenwall.general..','..dwarfenwall.council..')');
				speak("general",_("Ihr lasst euch mit dem Teufel ein, um einen Teufel auszutreiben?"),"disgust");
				setSpeakerEmotion("general","aloof");
				
				speak("council",_("In Zeiten wie diesen kann man nicht besonders zimperlich benehmen."),"offended");
				speak("council",_("Wollt ihr leben oder den Untoten als Verstaerkung dienen?"),"threaten");
				
				speak("general",_("Man kann diesen Monstern nicht trauen!"),"angry");
				speak("general",_("Solange ich diese Armee fuehre, werde ich solche nicht dulden!"),"offended");
				setSpeakerEmotion("general","aloof");
				
				if(solo())then
					speak("PL",_("Ich habe gerade die Untoten daran gehindert, eure Stadt zu umgehen!"),"unhappy");
				else
					speak("PL",_("Wir haben gerade die Untoten daran gehindert, eure Stadt zu umgehen!"),"unhappy");
				end;
				speak("general",_("Das beweist gar nichts!"),"aloof");
				speak("mage",_("Alle Krieger verbindet die Engstirnigkeit."),"thoughtful");
				if(solo())then
					speak("warrior",_("Ich toete nicht wahllos!"),"angry");
				else
					speak("warrior",_("Wir toeten nicht wahllos!"),"angry");
				end;
				
				if(solo() and femaleOnly())then
					speak("council",_("Sie steht unter dem Befehls des Konzils, es ist nicht eure Entscheidung."),"aloof");
				elseif(solo())then
					speak("council",_("Er steht unter dem Befehls des Konzils, es ist nicht eure Entscheidung."),"aloof");
				else
					speak("council",_("Sie stehen unter dem Befehls des Konzils, es ist nicht eure Entscheidung."),"aloof");
				end;
				changeTopic("theChargeBegins");
			</Effect>
		</Event>
		
		<Event trigger="theChargeBegins">
			<Effect>
				--TODO: Hornsignal
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				defend_dwall_tmp.messanger = createObject("guard","exit_south");
				addSpeaker(defend_dwall_tmp.messanger,"guard");
				speak("guard",_("Sie kommen! Der Angriff beginnt!"),"panic");
				changeTopic("ordersForCharge");
			</Effect>
		</Event>
		<Event trigger="ordersForCharge">
			<Effect>
				--TODO: Hornsignal
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				addCameraPosition(100,"locGeneral",-90,60,20);
				addCameraPosition(100,"locCamera",-90,60,20);
				removeSpeaker("guard");
				deleteObject(defend_dwall_tmp.messanger);
				
				speak("general",_("..."),"angry",2000);
				speak("general",_("Seht zu, dass ihr zur Mauer kommt!"),"unhappy");
				speak("archer",_("Wie schnell er seine Meinung doch aendert."),"sneer");
				if(solo())then
					speak("PL",_("Ich bin schon unterwegs"),"normal");
				else
					speak("PL",_("Los jetzt!"),"normal");
				end;
				changeTopic("partyLeavesForBattle")
			</Effect>
		</Event>
		<Event trigger="partyLeavesForBattle">
			<Effect>
				addUnitCommand(getSpeaker("PL"),"walk","entry_south");
				speakPause(1000);
				speak("general",_("Ich hoffe, ihr habt genug Geld, um diese Brut bei der Stange zu halten."),"threaten");
				speak("council",_("Macht euch keine Sorgen."),"unhappy");
				speak("council",_("Daran wird es nicht scheitern."),"sneer");
				--TODO: Schwert nehmen und gehen
				speak("general",_("Ich bete, dass ihr Euch nicht irrt..."),"unhappy")
				executeInDialog('')
				changeTopic("briefingOver")
			</Effect>
		</Event>
		<Event trigger="briefingOver">
			<Effect>
				addUnitCommand(dwarfenwall.general,"walk","exit_south");
				fadeOut(2000);
				defend_dwall.briefingFinished = true;
				timedExecute('assembleParty("dwarfenwall","locPartyLeave")',2000);
				timedExecute('fadeIn(0,{0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3})',2000);
				timedExecute('setCutsceneMode(false)',2000);
			</Effect>
		</Event>
	</Region>

	<Region name="dwarfenwall">
		<Event trigger="enter_region" >
			<Condition>
				return (defend_dwall.finished~=true);
			</Condition>
			<Effect>
				insertTrigger("catapult");
			</Effect>
		</Event>
		<Event trigger="player_moved" >
			<Condition>
				return (unitIsInArea(trigger.player,"areaNoEntry1"))
			</Condition>
			<Effect>
				unitSpeak(dwarfenwall.guard3,_("Es tut mir Leid, aber hier ist nur Durchgang fuer Angehoerige der aisener Armee."));
				addUnitCommand(trigger.player,"walk","locWeaponTrader");
				startTimer("stopWalking",1000);
				addTriggerVariable("unit",trigger.player);
			</Effect>
		</Event>
		
		<Event trigger="player_moved">
			<Condition>
				if(defend_dwall.briefingFinished ~= true)then
					return (unitIsInArea(trigger.player,"areaNoEntry3"))
				else
					return false;
				end;
			</Condition>
			<Effect>
				unitSpeak(trigger.player,_("Da will ich jetzt nicht hin. Ich sehe nur eine langweilige Mauer."));
				clearUnitCommands(trigger.player);
				addUnitCommand(trigger.player,"walk","locWeaponTrader");
				startTimer("stopWalking",1000);
				addTriggerVariable("unit",trigger.player);
			</Effect>
		</Event>
		
		<Event trigger="player_moved" >
			<Condition>
				return (unitIsInArea(trigger.player,"areaNoEntry2"))
			</Condition>
			<Effect>
				unitSpeak(dwarfenwall.guard4,_("Es tut mir Leid, aber hier ist nur Durchgang fuer Angehoerige der aisener Armee."));
				addUnitCommand(trigger.player,"walk","locWeaponTrader");
				startTimer("stopWalking",1000);
				addTriggerVariable("unit",trigger.player);
			</Effect>
		</Event>
		<Event trigger="stopWalking" >
			<Effect>
				clearUnitCommands(trigger.unit);
			</Effect>
		</Event>
		
		<Event trigger="unit_moved" >
			<Condition>
				local sub = get(trigger.unit,"subtype");
				return((unitIsInArea(trigger.unit,"areaHealer"))and (sub=="aisen_healer"));
			</Condition>
			<Effect>
				timedExecute('deleteObject('..trigger.unit..')',100);
			</Effect>
		</Event>
		
		<Event trigger="unit_hit" >
			<Condition>
				--send healers to important units
				local u = trigger.defender;

				if(defend_dwall.finished ~=true)then
					return((u == dwarfenwall.guard1)or(u == dwarfenwall.guard2)or(u == dwarfenwall.guard3)or(u == dwarfenwall.guard4)or(u == dwarfenwall.sergeant)or(u == dwarfenwall.weapons)or(u == dwarfenwall.armors)or(u == dwarfenwall.potions)or(u == dwarfenwall.blackmarket)or(u == theTrader.theTraderDW));
				else
					return false;
				end;
			</Condition>
			<Effect>
				sendOutHealer(trigger.defender);
			</Effect>
		</Event>
		
		<Event trigger="catapult">
			<Condition>
				return (defend_dwall.siegeEnded~=true);
			</Condition>
			<Effect>
				--bombards dwarfenwall
				local nextShot = math.random(800,4000);
				startTimer("catapult",nextShot);
				
				local x = math.random(40,90);
				local y = math.random(40,90);
				--print("and the winner is: "..x.."/"..y);
				catapult({x,y});
			</Effect>
		</Event>
		
		<Event trigger="unit_die" >
			<Effect>
				--print("someone is now six feet under")
				--print(get(trigger.unit,"subtype"))
				local i = dwarfenwall.people[trigger.unit];
				--print(i);
				
				if(dwarfenwall.city[i]==nil)then
					--print("now in the section for unregistered victims")
				elseif(dwarfenwall.city[i]["important"]~=true)then
					local unit;
					
					if(dwarfenwall.city[i]["moving"]~=true)then
						--print("unit was a stationary peasant")
						local chain = dwarfenwall.city[i]["respawn"];
						
						for key,loc in pairs(chain) do
							if(key == 1)then
								unit = createObject("peasant",loc);
							else
								--print("new peasant walking to "..loc);
								addUnitCommand(unit,"walk",loc,2.5);
							end;
						end;
						
						addUnitCommand(unit,"walk",dwarfenwall.city[i]["location"],0.2);
					else
						--print("unit was a moving peasant")
						unit = createObject("peasant",dwarfenwall.city[i]["location"]);
						dwarfenwall.city[i]["phase"] = 1;
						insertTrigger("peasantNextPhase");
						addTriggerVariable("id",i);
					end;
					
					setRefName(unit,dwarfenwall.city[i]["refname"])
					dwarfenwall.people[unit]=dwarfenwall.people[trigger.unit];
					dwarfenwall.people[trigger.unit]=nil;
					dwarfenwall.city[i]["unit"]=unit;
				else
					print("the unit was important and was not replaced... the gods will punish you!")
				end;
			</Effect>
		</Event>
	
		<Event trigger="party_complete" once="true">
			<Condition>
				return(defend_dwall.briefingFinished==true and defend_dwall.siegeStarted~=true);
			</Condition>
			<Effect>
				--TODO: Wachen von General G, ein paar Soldaten
				dwarfenwall.combatGeneral = createObject("general_greif_battle","locGeneralSpwan");
				addUnitCommand(dwarfenwall.combatGeneral,"walk","exit_rampart");
			</Effect>
		</Event>
		<Event trigger="unit_moved" once="true">
			<Condition>
				if(trigger.unit==dwarfenwall.combatGeneral)then
					return(unitIsInArea(trigger.unit,"areaRampart"));
				else
					return false;
				end;
			</Condition>
			<Effect>
				deleteObject(dwarfenwall.combatGeneral);
			</Effect>
		</Event>
	</Region>
	
	<Region name="dwarfenwallRampart">
		<Event trigger="create_region">
			<Condition>
				--debug variables
				debug["defend_dwall"] = false;
				debug["dwall_siege"]={};
				debug["dwall_siege"]["skipIntro"]=true;
				debug["dwall_siege"]["skipWave1"]=true;
				debug["dwall_siege"]["skipWave2"]=true;
				debug["dwall_siege"]["skipWave3"]=true;
				debug["dwall_siege"]["skipWave4"]=true;
				debug["dwall_siege"]["skipFirePrep"]=true;
				debug["dwall_siege"]["skipWave5"]=true;
				debug["dwall_siege"]["skipWave6"]=true;
				debug["dwall_siege"]["skip2ndBoss"]=true;
				debug["dwall_siege"]["skipWave7"]=true;
				debug["dwall_siege"]["skipWave8"]=true;
				debug["dwall_siege"]["skip3rdBoss"]=true;
				debug["dwall_siege"]["skipWave9"]=true;
				debug["dwall_siege"]["skipWave10"]=true;
				debug["dwall_siege"]["skip4thBoss"]=true;
				debug["dwall_siege"]["skipIntroNeivan"]=true;
				debug["dwall_siege"]["skipWave11"]=true;
				debug["dwall_siege"]["skipWave12"]=true;
				debug["dwall_siege"]["skip5thBoss"]=true;
				debug["dwall_siege"]["skipWave13"]=false;
				debug["dwall_siege"]["skipWave14"]=false;
				debug["dwall_siege"]["skip6thBoss"]=false;
				
				
				--this will set all debugvariables to false. Be sure to add new variables if you want it to keep functioning. Location: dwarfenwall.lua
				setDebugToFalse();
				
				return (defend_dwall.siegeEnded ~= true);
			</Condition>
			<Effect>
				--the number of penalty-points accumulated during battle
				defend_dwall_tmp.penalty=0;
			
				-- a table containing information for every battle-position | siege-index -> struct
				-- Be aware that this table contains informations about defending units as well as attacking groups. Ultimately this means there mustn't be conflicting indices.
				defend_dwall_tmp.siege = {};
				--a table containing every unit in battle| id -> siege-index
				-- this does not apply for the attacing spawn-groups
				defend_dwall_tmp.units = {};
				
				--guards of the second defense-line
				createUnitIndex(1, "locGuard1", 10, "guard_siege", 3, 40000, "locSpawnGuards",{"entry_south"});
				setGuard(1,-90)
				createUnitIndex(2, "locGuard2", 10, "guard_siege", 3, 40000, "locSpawnGuards",{"entry_south"});
				setGuard(2,-90)
				createUnitIndex(3, "locGuard3", 10, "guard_siege", 3, 40000, "locSpawnGuards",{"entry_south","locRampart2"});
				setGuard(3,-90)
				createUnitIndex(4, "locGuard4", 10, "guard_siege", 3, 40000, "locSpawnGuards",{"entry_south",locRampart1});
				setGuard(4,-90)
				
				--guards of the first defense-line
				createUnitIndex(5, "locGuard5", 10, "guard_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart1","locElemental1"})
				setGuard(5,-90)
				createUnitIndex(6, "locGuard6", 10, "guard_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart1","locElemental1"})
				setGuard(6,-90)
				createUnitIndex(7, "locGuard9", 10, "guard_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart1"})
				setGuard(7,-90)
				createUnitIndex(8, "locGuard10", 10, "guard_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart2"})
				setGuard(8,-90)
				createUnitIndex(9, "locGuard11", 10, "guard_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart2","locElemental2"})
				setGuard(9,-90)
				createUnitIndex(10, "locGuard12", 10, "guard_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart2","locElemental2"})
				setGuard(10,-90)
				
				--mages and bowman of the second defense-line
				createUnitIndex(11, "locBowmen2", 2, "aisen_mage", 10, 60000, "locSpawnGuards",{"entry_south","locRampart1"})
				setGuard(11,-90);
				createUnitIndex(12, "locBowmen3", 2,"aisen_mage", 10, 60000, "locSpawnGuards",{"entry_south","locRampart2"})
				setGuard(12,-90);
				createUnitIndex(13, "locBowmen1", 5,"bowman_siege", 3, 40000, "locSpawnGuards",{"entry_south"})
				setGuard(13,-90);
				--bowmen of the first defense-line
				createUnitIndex(14, "locBowmen4", 5, "bowman_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart1","locElemental1"})
				setGuard(14,-90);
				createUnitIndex(15, "locBowmen6", 5, "bowman_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart2"})
				setGuard(15,-90);
				createUnitIndex(16, "locBowmen7", 5, "bowman_siege", 1, 40000, "locSpawnGuards",{"entry_south","locRampart2","locElemental2"})
				setGuard(16,-90);
				
				--Darna's fireelementals
				createUnitIndex(17, "locElemental1", 12, "fire_guard", 6, 60000, "locElemental1")
				--local guard = setGuard(17,-90);
				createUnitIndex(18, "locElemental2", 12, "fire_guard", 6, 60000, "locElemental2")
				--local guard = setGuard(18,-90);
				
				--elite-guards of Greif and Darna
				createUnitIndex(19, "locGeneralGuard1", 10, "elite_siege", 25, 100000, "locSpawnGuards",{"entry_south"})
				--local guard = setGuard(19,-90)
				createUnitIndex(20, "locGeneralGuard2", 10, "dwarfenwall_councilguard", 25, 100000, "locSpawnGuards",{"entry_south"})
				--local guard = setGuard(20,-90);
			--aisen defenses
				createUnitIndex(21, "locDefender1", 15, "bowman_siegeDefense", 3, 40000, "locSpawnBow1");
				local guard = setGuard(21,-90);
				createUnitIndex(22, "locDefender3", 15, "bowman_siegeDefense", 3, 40000, "locSpawnBow1");
				local guard = setGuard(22,-90);
				createUnitIndex(23, "locDefender4", 15, "bowman_siegeDefense", 3, 40000, "locSpawnBow2");
				local guard = setGuard(23,-90);
				createUnitIndex(24, "locDefender6", 15, "bowman_siegeDefense", 3, 40000, "locSpawnBow2");
				local guard = setGuard(24,-90);
				
				createUnitIndex(25, "locDefender2", 15, "aisen_mageDefense", 3, 40000, "locSpawnBow1");
				local guard = setGuard(25,-90);
				createUnitIndex(26, "locDefender5", 15, "aisen_mageDefense", 3, 40000, "locSpawnBow2");
				local guard = setGuard(26,-90);
				
				
			--undead defenses
				createUnitIndex(50, "locArmy1", 15, "bow_skel_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(50,90);
				createUnitIndex(51, "locArmy2", 15, "bow_skel_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(51,90);
				createUnitIndex(52, "locArmy3", 15, "bow_skel_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(52,90);
				createUnitIndex(53, "locArmy4", 15, "bow_skel_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(53,90);
				createUnitIndex(54, "locArmy5", 15, "bow_skel_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(54,90);
				createUnitIndex(55, "locArmy6", 15, "bow_skel_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(55,90);
				
				createUnitIndex(56, "locNecromancer1", 15, "necromancer_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(56,90);
				createUnitIndex(57, "locNecromancer2", 15, "necromancer_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(57,90);
				createUnitIndex(58, "locNecromancer3", 15, "necromancer_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(58,90);
				createUnitIndex(59, "locNecromancer4", 15, "necromancer_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(59,90);
				createUnitIndex(60, "locNecromancer5", 15, "necromancer_siegeDefense", 0, 0, "locEntryUndead");
				--local guard = setGuard(60,90);
				
				
			--undead attackers
				defend_dwall_tmp.attackLeft = {"locCharge1", "locCharge2", "locLeftFlank", "locEntryGeneral"};
				defend_dwall_tmp.attackMiddleLeft = {"locCharge3", "locEntryGeneral"};
				defend_dwall_tmp.attackMiddle = {"locCharge4","locCharge3","locEntryGeneral"};
				defend_dwall_tmp.attackMiddleRight = {"locCharge5","locEntryGeneral"};
				defend_dwall_tmp.attackRight = {"locCharge6","locCharge7","locRightFlank","locEntryGeneral"};
			
			-- digit code:
			-- first digit: Monster type: 1: normal, 2: fire, 3: ice, 4: special, 5: boss
			-- second digit: difficulty 1: veryeasy, 2: easy, 3:medium, 4: hard
			-- third digit:  Variation (1..3)
			-- fourth digit: attack path 1: left ... 5: right
				
			-- normal skeletons
				createAttackIndex(1112, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "weakSkeletonsDwall1");
				createAttackIndex(1114, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "weakSkeletonsDwall1");
				createAttackIndex(1111, "locSpawn2", defend_dwall_tmp.attackLeft, "weakSkeletonsDwall1");
				createAttackIndex(1113, "locSpawn4", defend_dwall_tmp.attackMiddle, "weakSkeletonsDwall1");
				createAttackIndex(1115, "locSpawn6", defend_dwall_tmp.attackRight, "weakSkeletonsDwall1");
			
				
				createAttackIndex(1121, "locSpawn2", defend_dwall_tmp.attackLeft, "weakSkeletonsDwall2");
				createAttackIndex(1122, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "weakSkeletonsDwall2");
				createAttackIndex(1123, "locSpawn4", defend_dwall_tmp.attackMiddle, "weakSkeletonsDwall2");
				createAttackIndex(1124, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "weakSkeletonsDwall2");
				createAttackIndex(1125, "locSpawn6", defend_dwall_tmp.attackRight, "weakSkeletonsDwall2");
				
				createAttackIndex(1211, "locSpawn2", defend_dwall_tmp.attackLeft, "easySkeletonsDwall1");
				createAttackIndex(1212, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easySkeletonsDwall1");
				createAttackIndex(1213, "locSpawn4", defend_dwall_tmp.attackMiddle, "easySkeletonsDwall1");
				createAttackIndex(1214, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easySkeletonsDwall1");
				createAttackIndex(1215, "locSpawn6", defend_dwall_tmp.attackRight, "easySkeletonsDwall1");
			
				createAttackIndex(1221, "locSpawn2", defend_dwall_tmp.attackLeft, "easySkeletonsDwall2");
				createAttackIndex(1222, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easySkeletonsDwall2");
				createAttackIndex(1223, "locSpawn4", defend_dwall_tmp.attackMiddle, "easySkeletonsDwall2");
				createAttackIndex(1224, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easySkeletonsDwall2");
				createAttackIndex(1225, "locSpawn6", defend_dwall_tmp.attackRight, "easySkeletonsDwall2");
				
				createAttackIndex(1231, "locSpawn2", defend_dwall_tmp.attackLeft, "easySkeletonsDwall2");
				createAttackIndex(1232, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easySkeletonsDwall2");
				createAttackIndex(1233, "locSpawn4", defend_dwall_tmp.attackMiddle, "easySkeletonsDwall2");
				createAttackIndex(1234, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easySkeletonsDwall2");
				createAttackIndex(1235, "locSpawn6", defend_dwall_tmp.attackRight, "easySkeletonsDwall2");
				
				createAttackIndex(1311, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumSkeletonsDwall1");
				createAttackIndex(1312, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumSkeletonsDwall1");
				createAttackIndex(1313, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumSkeletonsDwall1");
				createAttackIndex(1314, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumSkeletonsDwall1");
				createAttackIndex(1315, "locSpawn6", defend_dwall_tmp.attackRight, "mediumSkeletonsDwall1");
				
				createAttackIndex(1321, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumSkeletonsDwall2");
				createAttackIndex(1322, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumSkeletonsDwall2");
				createAttackIndex(1323, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumSkeletonsDwall2");
				createAttackIndex(1324, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumSkeletonsDwall2");
				createAttackIndex(1325, "locSpawn6", defend_dwall_tmp.attackRight, "mediumSkeletonsDwall2");
				
				createAttackIndex(1331, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumSkeletonsDwall2");
				createAttackIndex(1332, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumSkeletonsDwall2");
				createAttackIndex(1333, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumSkeletonsDwall2");
				createAttackIndex(1334, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumSkeletonsDwall2");
				createAttackIndex(1335, "locSpawn6", defend_dwall_tmp.attackRight, "mediumSkeletonsDwall2");
				
				createAttackIndex(1411, "locSpawn2", defend_dwall_tmp.attackLeft, "hardSkeletonsDwall1");
				createAttackIndex(1412, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardSkeletonsDwall1");
				createAttackIndex(1413, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardSkeletonsDwall1");
				createAttackIndex(1414, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardSkeletonsDwall1");
				createAttackIndex(1415, "locSpawn6", defend_dwall_tmp.attackRight, "hardSkeletonsDwall1");
				
				createAttackIndex(1421, "locSpawn2", defend_dwall_tmp.attackLeft, "hardSkeletonsDwall2");
				createAttackIndex(1422, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardSkeletonsDwall2");
				createAttackIndex(1423, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardSkeletonsDwall2");
				createAttackIndex(1424, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardSkeletonsDwall2");
				createAttackIndex(1425, "locSpawn6", defend_dwall_tmp.attackRight, "hardSkeletonsDwall2");
				
				createAttackIndex(1431, "locSpawn2", defend_dwall_tmp.attackLeft, "hardSkeletonsDwall3");
				createAttackIndex(1432, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardSkeletonsDwall3");
				createAttackIndex(1433, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardSkeletonsDwall3");
				createAttackIndex(1434, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardSkeletonsDwall3");
				createAttackIndex(1435, "locSpawn6", defend_dwall_tmp.attackRight, "hardSkeletonsDwall3");
				-- normal skeletons end
				
				-- fire skeletons
				createAttackIndex(2211, "locSpawn2", defend_dwall_tmp.attackLeft, "easyFireSkeletonsDwall1");
				createAttackIndex(2212, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easyFireSkeletonsDwall1");
				createAttackIndex(2213, "locSpawn4", defend_dwall_tmp.attackMiddle, "easyFireSkeletonsDwall1");
				createAttackIndex(2214, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easyFireSkeletonsDwall1");
				createAttackIndex(2215, "locSpawn6", defend_dwall_tmp.attackRight, "easyFireSkeletonsDwall1");
			
				createAttackIndex(2221, "locSpawn2", defend_dwall_tmp.attackLeft, "easyFireSkeletonsDwall2");
				createAttackIndex(2222, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easyFireSkeletonsDwall2");
				createAttackIndex(2223, "locSpawn4", defend_dwall_tmp.attackMiddle, "easyFireSkeletonsDwall2");
				createAttackIndex(2224, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easyFireSkeletonsDwall2");
				createAttackIndex(2225, "locSpawn6", defend_dwall_tmp.attackRight, "easyFireSkeletonsDwall2");
				
				createAttackIndex(2311, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumFireSkeletonsDwall1");
				createAttackIndex(2312, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumFireSkeletonsDwall1");
				createAttackIndex(2313, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumFireSkeletonsDwall1");
				createAttackIndex(2314, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumFireSkeletonsDwall1");
				createAttackIndex(2315, "locSpawn6", defend_dwall_tmp.attackRight, "mediumFireSkeletonsDwall1");
				
				createAttackIndex(2321, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumFireSkeletonsDwall2");
				createAttackIndex(2322, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumFireSkeletonsDwall2");
				createAttackIndex(2323, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumFireSkeletonsDwall2");
				createAttackIndex(2324, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumFireSkeletonsDwall2");
				createAttackIndex(2325, "locSpawn6", defend_dwall_tmp.attackRight, "mediumFireSkeletonsDwall2");
				
				createAttackIndex(2411, "locSpawn2", defend_dwall_tmp.attackLeft, "hardFireSkeletonsDwall1");
				createAttackIndex(2412, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardFireSkeletonsDwall1");
				createAttackIndex(2413, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardFireSkeletonsDwall1");
				createAttackIndex(2414, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardFireSkeletonsDwall1");
				createAttackIndex(2415, "locSpawn6", defend_dwall_tmp.attackRight, "hardFireSkeletonsDwall1");
				
				createAttackIndex(2421, "locSpawn2", defend_dwall_tmp.attackLeft, "hardFireSkeletonsDwall2");
				createAttackIndex(2422, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardFireSkeletonsDwall2");
				createAttackIndex(2423, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardFireSkeletonsDwall2");
				createAttackIndex(2424, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardFireSkeletonsDwall2");
				createAttackIndex(2425, "locSpawn6", defend_dwall_tmp.attackRight, "hardFireSkeletonsDwall2");
				-- fire skeletons end
				
				-- ice skeletons
				createAttackIndex(3211, "locSpawn2", defend_dwall_tmp.attackLeft, "easyIceSkeletonsDwall1");
				createAttackIndex(3212, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easyIceSkeletonsDwall1");
				createAttackIndex(3213, "locSpawn4", defend_dwall_tmp.attackMiddle, "easyIceSkeletonsDwall1");
				createAttackIndex(3214, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easyIceSkeletonsDwall1");
				createAttackIndex(3215, "locSpawn6", defend_dwall_tmp.attackRight, "easyIceSkeletonsDwall1");
			
				createAttackIndex(3221, "locSpawn2", defend_dwall_tmp.attackLeft, "easyIceSkeletonsDwall2");
				createAttackIndex(3222, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easyIceSkeletonsDwall2");
				createAttackIndex(3223, "locSpawn4", defend_dwall_tmp.attackMiddle, "easyIceSkeletonsDwall2");
				createAttackIndex(3224, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easyIceSkeletonsDwall2");
				createAttackIndex(3225, "locSpawn6", defend_dwall_tmp.attackRight, "easyIceSkeletonsDwall2");
				
				createAttackIndex(3311, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumIceSkeletonsDwall1");
				createAttackIndex(3312, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumIceSkeletonsDwall1");
				createAttackIndex(3313, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumIceSkeletonsDwall1");
				createAttackIndex(3314, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumIceSkeletonsDwall1");
				createAttackIndex(3315, "locSpawn6", defend_dwall_tmp.attackRight, "mediumIceSkeletonsDwall1");
				
				createAttackIndex(3321, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumIceSkeletonsDwall2");
				createAttackIndex(3322, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumIceSkeletonsDwall2");
				createAttackIndex(3323, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumIceSkeletonsDwall2");
				createAttackIndex(3324, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumIceSkeletonsDwall2");
				createAttackIndex(3325, "locSpawn6", defend_dwall_tmp.attackRight, "mediumIceSkeletonsDwall2");
				
				createAttackIndex(3411, "locSpawn2", defend_dwall_tmp.attackLeft, "hardIceSkeletonsDwall1");
				createAttackIndex(3412, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardIceSkeletonsDwall1");
				createAttackIndex(3413, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardIceSkeletonsDwall1");
				createAttackIndex(3414, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardIceSkeletonsDwall1");
				createAttackIndex(3415, "locSpawn6", defend_dwall_tmp.attackRight, "hardIceSkeletonsDwall1");
				
				createAttackIndex(3421, "locSpawn2", defend_dwall_tmp.attackLeft, "hardIceSkeletonsDwall2");
				createAttackIndex(3422, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardIceSkeletonsDwall2");
				createAttackIndex(3423, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardIceSkeletonsDwall2");
				createAttackIndex(3424, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardIceSkeletonsDwall2");
				createAttackIndex(3425, "locSpawn6", defend_dwall_tmp.attackRight, "hardIceSkeletonsDwall2");
				-- ice skeletons end
				
				-- shadow skeletons
				createAttackIndex(4211, "locSpawn2", defend_dwall_tmp.attackLeft, "easyShadowSkeletonsDwall1");
				createAttackIndex(4212, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easyShadowSkeletonsDwall1");
				createAttackIndex(4213, "locSpawn4", defend_dwall_tmp.attackMiddle, "easyShadowSkeletonsDwall1");
				createAttackIndex(4214, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easyShadowSkeletonsDwall1");
				createAttackIndex(4215, "locSpawn6", defend_dwall_tmp.attackRight, "easyShadowSkeletonsDwall1");
			
				createAttackIndex(4221, "locSpawn2", defend_dwall_tmp.attackLeft, "easyShadowSkeletonsDwall2");
				createAttackIndex(4222, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easyShadowSkeletonsDwall2");
				createAttackIndex(4223, "locSpawn4", defend_dwall_tmp.attackMiddle, "easyShadowSkeletonsDwall2");
				createAttackIndex(4224, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easyShadowSkeletonsDwall2");
				createAttackIndex(4225, "locSpawn6", defend_dwall_tmp.attackRight, "easyShadowSkeletonsDwall2");
				
				createAttackIndex(4311, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumShadowSkeletonsDwall1");
				createAttackIndex(4312, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumShadowSkeletonsDwall1");
				createAttackIndex(4313, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumShadowSkeletonsDwall1");
				createAttackIndex(4314, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumShadowSkeletonsDwall1");
				createAttackIndex(4315, "locSpawn6", defend_dwall_tmp.attackRight, "mediumShadowSkeletonsDwall1");
				
				createAttackIndex(4321, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumShadowSkeletonsDwall2");
				createAttackIndex(4322, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumShadowSkeletonsDwall2");
				createAttackIndex(4323, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumShadowSkeletonsDwall2");
				createAttackIndex(4324, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumShadowSkeletonsDwall2");
				createAttackIndex(4325, "locSpawn6", defend_dwall_tmp.attackRight, "mediumShadowSkeletonsDwall2");
				
				createAttackIndex(4411, "locSpawn2", defend_dwall_tmp.attackLeft, "hardShadowSkeletonsDwall1");
				createAttackIndex(4412, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardShadowSkeletonsDwall1");
				createAttackIndex(4413, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardShadowSkeletonsDwall1");
				createAttackIndex(4414, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardShadowSkeletonsDwall1");
				createAttackIndex(4415, "locSpawn6", defend_dwall_tmp.attackRight, "hardShadowSkeletonsDwall1");
				
				createAttackIndex(4421, "locSpawn2", defend_dwall_tmp.attackLeft, "hardShadowSkeletonsDwall2");
				createAttackIndex(4422, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardShadowSkeletonsDwall2");
				createAttackIndex(4423, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardShadowSkeletonsDwall2");
				createAttackIndex(4424, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardShadowSkeletonsDwall2");
				createAttackIndex(4425, "locSpawn6", defend_dwall_tmp.attackRight, "hardShadowSkeletonsDwall2");
				-- shadow skeletons end
				
				-- special skeletons
				createAttackIndex(5211, "locSpawn2", defend_dwall_tmp.attackLeft, "easySpecialSkeletonsDwall1");
				createAttackIndex(5212, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easySpecialSkeletonsDwall1");
				createAttackIndex(5213, "locSpawn4", defend_dwall_tmp.attackMiddle, "easySpecialSkeletonsDwall1");
				createAttackIndex(5214, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easySpecialSkeletonsDwall1");
				createAttackIndex(5215, "locSpawn6", defend_dwall_tmp.attackRight, "easySpecialSkeletonsDwall1");
			
				createAttackIndex(5221, "locSpawn2", defend_dwall_tmp.attackLeft, "easySpecialSkeletonsDwall2");
				createAttackIndex(5222, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "easySpecialSkeletonsDwall2");
				createAttackIndex(5223, "locSpawn4", defend_dwall_tmp.attackMiddle, "easySpecialSkeletonsDwall2");
				createAttackIndex(5224, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "easySpecialSkeletonsDwall2");
				createAttackIndex(5225, "locSpawn6", defend_dwall_tmp.attackRight, "easySpecialSkeletonsDwall2");
				
				createAttackIndex(5311, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumSpecialSkeletonsDwall1");
				createAttackIndex(5312, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumSpecialSkeletonsDwall1");
				createAttackIndex(5313, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumSpecialSkeletonsDwall1");
				createAttackIndex(5314, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumSpecialSkeletonsDwall1");
				createAttackIndex(5315, "locSpawn6", defend_dwall_tmp.attackRight, "mediumSpecialSkeletonsDwall1");
				
				createAttackIndex(5321, "locSpawn2", defend_dwall_tmp.attackLeft, "mediumSpecialSkeletonsDwall2");
				createAttackIndex(5322, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "mediumSpecialSkeletonsDwall2");
				createAttackIndex(5323, "locSpawn4", defend_dwall_tmp.attackMiddle, "mediumSpecialSkeletonsDwall2");
				createAttackIndex(5324, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "mediumSpecialSkeletonsDwall2");
				createAttackIndex(5325, "locSpawn6", defend_dwall_tmp.attackRight, "mediumSpecialSkeletonsDwall2");
				
				createAttackIndex(5411, "locSpawn2", defend_dwall_tmp.attackLeft, "hardSpecialSkeletonsDwall1");
				createAttackIndex(5412, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardSpecialSkeletonsDwall1");
				createAttackIndex(5413, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardSpecialSkeletonsDwall1");
				createAttackIndex(5414, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardSpecialSkeletonsDwall1");
				createAttackIndex(5415, "locSpawn6", defend_dwall_tmp.attackRight, "hardSpecialSkeletonsDwall1");
				
				createAttackIndex(5421, "locSpawn2", defend_dwall_tmp.attackLeft, "hardSpecialSkeletonsDwall2");
				createAttackIndex(5422, "locSpawn3", defend_dwall_tmp.attackMiddleLeft, "hardSpecialSkeletonsDwall2");
				createAttackIndex(5423, "locSpawn4", defend_dwall_tmp.attackMiddle, "hardSpecialSkeletonsDwall2");
				createAttackIndex(5424, "locSpawn5", defend_dwall_tmp.attackMiddleRight, "hardSpecialSkeletonsDwall2");
				createAttackIndex(5425, "locSpawn6", defend_dwall_tmp.attackRight, "hardSpecialSkeletonsDwall2");
				-- special skeletos end
				
				-- bosses
				createAttackIndex(5013, "locSpawn4", defend_dwall_tmp.attackMiddle, "boss1");
				createAttackIndex(5023, "locSpawn4", defend_dwall_tmp.attackMiddle, "boss2");
				createAttackIndex(5033, "locSpawn4", defend_dwall_tmp.attackMiddle, "boss3");
				createAttackIndex(5043, "locSpawn4", defend_dwall_tmp.attackMiddle, "boss4");
				createAttackIndex(5053, "locSpawn4", defend_dwall_tmp.attackMiddle, "boss5");
				createAttackIndex(5063, "locSpawn4", defend_dwall_tmp.attackMiddle, "boss6");
				
				
			</Effect>
		</Event>
		
		<Event trigger="enter_region">
			<Condition>
				return (defend_dwall.siegeEnded ~= true);
			</Condition>
			<Effect>
				insertTrigger("beforeBattle");
				defend_dwall.siegeStarted=true;
			</Effect>
		</Event>
		
		<Event trigger="unit_die">
			<Condition>
				return (defend_dwall_tmp.units[trigger.unit] ~= nil);
			</Condition>
			<Effect>
				local i = defend_dwall_tmp.units[trigger.unit];
				startTimer(defend_dwall_tmp.siege[i]["respawnTrigger"],defend_dwall_tmp.siege[i]["respawn"]);
				--startTimer("newUnit",1000);
				addTriggerVariable("index",i);
				defend_dwall_tmp.penalty = defend_dwall_tmp.penalty + defend_dwall_tmp.siege[i]["penalty"];
				print("penalty-points: "..defend_dwall_tmp.penalty);
				
				--print("index: "..i.." id: "..trigger.unit);
				defend_dwall_tmp.units[trigger.unit]=nil;
			</Effect>
		</Event>
		
		<Event trigger="unit_die">
			<Condition>
				return ((trigger.unit==defend_dwall_tmp.general) or (trigger.unit==defend_dwall_tmp.council));
			</Condition>
			<Effect>
				set(trigger.unit,"health",get(trigger.unit,"max_health"));
				print("a very important unit just died");
				defend_dwall_tmp.penalty = defend_dwall_tmp.penalty + 200;
				addUnitCommand(trigger.unit,"resurrection_fire_storm");
			</Effect>
		</Event>
		
		<Event trigger="newUnit">
			<Effect>
				--print("lets get a new unit");
				local i = trigger.index;
				--print("The index is "..i);
				--print("subtype: "..defend_dwall_tmp.siege[i]["subtype"]);
				local unit = createObject(defend_dwall_tmp.siege[i]["subtype"],defend_dwall_tmp.siege[i]["respawnlocation"]);
				defend_dwall_tmp.units[unit]=i;
				for j, location in ipairs(defend_dwall_tmp.siege[i]["respawnroute"]) do
					addUnitCommand(unit,"walk",location,1,"secondary");
				end;
				
				addUnitCommand(unit,"walk",defend_dwall_tmp.siege[i]["location"],0.5,"secondary");
				addUnitCommand(unit,"guard",defend_dwall_tmp.siege[i]["location"],defend_dwall_tmp.siege[i]["guard_range"],"secondary");
			</Effect>
		</Event>
		
		<Event trigger="beforeBattle" once="true">
			<Effect>
				fadeOut(0);
				fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
				
				assembleParty("dwarfenwallRampart","locParty");
				setCutsceneMode(true);
				addCameraPosition(0,"locEntryGeneral",-70,55,15);
				
			--spawn the elite_guards
				local unit=createObject("elite_siege","exit_south");
				addUnitCommand(unit,"walk","locGeneralGuard1");
				addUnitCommand(unit,"guard","locGeneralGuard1",10,"secondary");
				-- guard code for elite siege
				defend_dwall_tmp.units[unit] = 19;
				
				unit=createObject("dwarfenwall_councilguard","exit_south");
				addUnitCommand(unit,"walk","locGeneralGuard2");
				addUnitCommand(unit,"guard","locGeneralGuard2",10,"secondary");
				-- guard code for elite councilguard
				defend_dwall_tmp.units[unit] = 20;
				
				defend_dwall_tmp.arrived=0;
				if(debug["dwall_siege"]["skipIntro"] ~= true)then
					startTimer("councilEnters",3000);
					startTimer("generalEnters",3500);
				else
					assembleParty("dwarfenwallRampart","entry_south");
					insertTrigger("councilEnters");
					insertTrigger("generalEnters");
				end;
			</Effect>
		</Event>
		<Event trigger="generalEnters" once="true">
			<Effect>
				defend_dwall_tmp.general = createObject("general_greif_battle","exit_south");
				setRefName(defend_dwall_tmp.general,"General Greif");
				addUnitCommand(defend_dwall_tmp.general,"walk","locEntryGeneral");
				defend_dwall_tmp.phase="generalEnters";
			</Effect>
		</Event>
		<Event trigger="councilEnters" once="true">
			<Effect>
				defend_dwall_tmp.council = createObject("council_dwarfenwall","exit_south");
				setRefName(defend_dwall_tmp.council,"Maga Convocatis Darna Eistaucher");
				addUnitCommand(defend_dwall_tmp.council,"walk","locCouncilMage");
				defend_dwall_tmp.phase="generalEnters";
			</Effect>
		</Event>
		
		<Event trigger="command_complete" once="true">
			<Condition>
				local sub = get(trigger.unit,"subtype");
				return(sub=="general_greif_battle")
			</Condition>
			<Effect>
				set(trigger.unit,"angle",-90);
				
				defend_dwall_tmp.arrived=defend_dwall_tmp.arrived+1;
				if(defend_dwall_tmp.arrived==2)then
					insertTrigger("talkBeforeBattle");
				end;
			</Effect>
		</Event>
		<Event trigger="command_complete" once="true">
			<Condition>
				local sub = get(trigger.unit,"subtype");
				return(sub=="council_dwarfenwall");
			</Condition>
			<Effect>
				set(trigger.unit,"angle",-90);
				
				defend_dwall_tmp.arrived=defend_dwall_tmp.arrived+1;
				if(defend_dwall_tmp.arrived==2)then
					insertTrigger("talkBeforeBattle");
				end;
			</Effect>
		</Event>
		
		<Event trigger="command_complete" once="true">
			<Condition>
				local sub = get(trigger.unit,"subtype");
				return(sub=="elite_siege")
			</Condition>
			<Effect>
				set(trigger.unit,"angle",-90);
			</Effect>
		</Event>
		<Event trigger="command_complete" once="true">
			<Condition>
				local sub = get(trigger.unit,"subtype");
				return(sub=="dwarfenwall_councilguard")
			</Condition>
			<Effect>
				set(trigger.unit,"angle",-90);
			</Effect>
		</Event>
		
		<Event trigger="talkBeforeBattle" once="true">
			<Effect>
				--lookAtEachOther(defend_dwall_tmp.council,defend_dwall_tmp.general);
				
				if(debug["dwall_siege"]["skipIntro"] ~= true)then
					initDialog();
					addSpeaker(defend_dwall_tmp.council, "darna");
					addSpeaker(defend_dwall_tmp.general, "greif");
					
					setSpeakerAnimation("greif","point",700);
					timedExecute('setObjectAnimation('..defend_dwall_tmp.general..',"pointing",1000,true)',695);
					speak("greif", _("Da hinten kommen sie."),"unhappy");
					setSpeakerAnimation("greif","warcry",1500);
					speak("greif", _("Macht euch bereit Maenner!"),"warcry");
					setSpeakerEmotion("greif","normal");
					changeTopic("entryLich");
				else
					insertTrigger("entryLich");
				end;
			</Effect>
		</Event>
		<Event trigger="entryLich" once="true">
			<Effect>
				if(debug["dwall_siege"]["skipIntro"] ~= true)then
					addCameraPosition(4000,"locLich",-80,55,35)
					addCameraPosition(1000,"locLich",-80,55,35)
					addCameraPosition(1000,"locLich",-80,55,17)
				else
					addCameraPosition(0,"locLich",-80,55,17)
				end;
				entryLich();
			</Effect>
		</Event>
		
		<Event trigger="command_complete" once="true">
			<Condition>
				return(trigger.unit==defend_dwall_tmp.attendend1)
			</Condition>
			<Effect>
				setObjectAnimation(trigger.unit,"kneelDown",790);
				timedExecute('setObjectAnimation('..trigger.unit..',"kneel",1900,true)',785);
			</Effect>
		</Event>
		<Event trigger="command_complete" once="true">
			<Condition>
				return(trigger.unit==defend_dwall_tmp.attendend2)
			</Condition>
			<Effect>
				setObjectAnimation(trigger.unit,"kneelDown",820);
				timedExecute('setObjectAnimation('..trigger.unit..',"kneel",2100,true)',815);
			</Effect>
		</Event>
		<Event trigger="command_complete" once="true">
			<Condition>
				return(trigger.unit==defend_dwall_tmp.lich)
			</Condition>
			<Effect>
				set(trigger.unit,"angle",90);
				insertTrigger("undeadTalkBeforeBattle1")
			</Effect>
		</Event>
		
		<Event trigger="undeadTalkBeforeBattle1" once="true">
			<Effect>
				if(debug["dwall_siege"]["skipIntro"] ~= true)then
					initDialog();
					addImportantSpeakers();
				
					speakPause(800);
					speak("lich",_("Eure Zeit ist gekommen, erbaermliche Menschen!"),"threaten");
					speak("att1",_("Zwergentrutz wird endlich Euer sein, mein Gebieter."),"sneer");
					speak("att2",_("Mit der Unterstuetzung aus der Hauptstadt wird es endlich gelingen."),"happy");
					speak("lich",_("Beginnen wir also den letzten Sturm auf diese elende Festung."),"angry");
					executeInDialog('insertTrigger("changeView");addTriggerVariable("nextTrigger","beingPrepared");');
				else
					insertTrigger("beingPrepared");
				end;
			</Effect>
		</Event>
		
		<Event trigger="changeView">
			<Effect>
				setCutsceneMode(true);
				fadeOut(1000)
				startTimer(trigger.nextTrigger,1500);
			</Effect>
		</Event>
		
		<Event trigger="beingPrepared" once="true">
			<Effect>
				if(debug["dwall_siege"]["skipIntro"] ~= true)then
					fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
					groupObjectsArc(getPlayers(),"entry_south","locBowmen1",nil,90);
					addCameraPosition(0,"locEntryGeneral",-70,55,15);
					
					initDialog();
					addImportantSpeakers();

					speakPause(1000);
					speak("greif",_("Da hinten sind wahrscheinlich so viele Untote, dass Eure ach so kampfkraeftige Unterstuetzung unseren Tod nicht wird abwenden koennen."),"unhappy");
					speak("darna",_("Diese... Unterstuetzung ist nicht das einzige, was das Konzil fuer Zwergentrutz tun kann und wird."),"aloof");
					speak("darna",_("Ich habe schon vor Wochen einen Erdelementar gebunden."),"sneer");
					speak("darna",_("Er wartet nur noch auf meinen Befehl."),"normal");
					speak("darna",_("Natuerlich konnte ich nicht wissen, wo die Untoten angreifen wuerden."),"thougtful");
					speak("darna",_("Ich fuerchte, da kommt einiges an Aufraeumarbeiten auf die Ueberlebenden zu."),"sad");
					speak("greif",_("Hoert auf zu spotten und tut es endlich, was auch immer ihr vorhabt."),"angry");
					setSpeakerEmotion("greif","normal");
					setSpeakerAnimation("darna","callEarth",3000);
					speakPause(3000);
					executeInDialog('insertTrigger("changeView");addTriggerVariable("nextTrigger","cuttingOfUndead");');
				else
					insertTrigger("cuttingOfUndead");
				end;
			</Effect>
		</Event>
		
		<Event trigger="cuttingOfUndead" once="true">
			<Effect>
				defend_dwall_tmp.phase="groundbreak";
				if(debug["dwall_siege"]["skipIntro"] ~= true)then
					fadeIn(1000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
					addCameraPosition(0,"locFissure1",-60,55,20);
					addCameraPosition(800,"locFissure1",-60,55,20);
					addCameraPosition(3500,"locFissure7",-120,55,20);
					addCameraPosition(1500,"locFissure7",-120,55,20);
					addCameraPosition(1500,"locLich",-65,35,9);
					timedExecute("blockWall()",1000);
				else
					fadeIn(0, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
					blockWall();
					addCameraPosition(0,"locLich",-65,35,9);
				end;
			</Effect>
		</Event>
		
		<Event trigger="all_camera_moves_complete" once="true">
			<Condition>
				return(defend_dwall_tmp.phase=="groundbreak");
			</Condition>
			<Effect>
				if(debug["dwall_siege"]["skipIntro"] ~= true)then
					initDialog();
					addImportantSpeakers();
					
					speak("lich", _("Verfluchte Elementaristen!"),"warcry");
					speak("lich", _("Es wird mir eine Freude sein, den Körper dieser Hexe wiederzubeleben, nur um sie zu verbrennen!"),"angry");
					speak("att1",_("Es wird geschehen, mein Gebieter."),"amused");
					speak("att2",_("Aber wie greifen wir die Stadt jetzt an? Sie hat den Weg fuer unsere Armee blockiert"),"thoughtful");
					speak("lich", _("Schweigt!"),"threaten");
					setSpeakerEmotion("att1","panic");
					setSpeakerEmotion("att2","panic");
					speakPause(1000);
					speak("lich", _("Die Katapulte?"),"normal");
					speak("att1",_("Sind bereit, mein Gebieter"),"normal");
					speak("lich", _("Unsere Nekromanten?"),"normal");
					speak("att2",_("Warten nur auf euren Befehl."),"normal");
					speak("lich", _("Nicht umsonst kaempfe ich schon seit Jahrhunderten mit Zwergentrutz."),"grin");
					speak("lich", _("Schickt die Skelette durch die Kriechgaenge."),"threaten");
					
					setSpeakerAnimation("att1","kneelUp",800);
					setSpeakerAnimation("att2","kneelUp",700);
					speakPause(1000);
					changeTopic("firstWaveAdvances")
				else
					addUnitCommand(defend_dwall_tmp.attendend1,"walk","locEntryUndead",3);
					addUnitCommand(defend_dwall_tmp.attendend2,"walk","locEntryUndead",3);
					insertTrigger("summoningElementals");
				end;
			</Effect>
		</Event>
		
		<Event trigger="firstWaveAdvances" once="true">
			<Effect>
				addUnitCommand(defend_dwall_tmp.attendend1,"walk","locEntryUndead",3);
				addUnitCommand(defend_dwall_tmp.attendend2,"walk","locEntryUndead",3);
				
				addCameraPosition(4000,"locEntryGeneral",-70,55,15);
				
				speak("greif", _("Da tut sich was."),"normal");
				speak("greif", _("Sie kommen!"),"warcry");
				setSpeakerEmotion("greif","normal")
				speak("darna",_("Es wird wohl nicht schaden, wenn ich auch noch ein paar Helfer rufe."),"aloof");
				
				if(solo())then
					speak("greif", _("An die Front mit euch, Schlaechter. _solo"),"angry");
				else
					speak("greif", _("An die Front mit euch, Schlaechter."),"angry");
				end;
				speak("leader",_("Sag 'Bitte'."),"grin")
				speak("darna",_("Macht schon!"),"unhappy");
				setSpeakerEmotion("darna","normal");
				changeTopic("summoningElementals");
			</Effect>
		</Event>
		
		<Event trigger="summoningElementals" once="true">
			<Effect>
				if(debug["dwall_siege"]["skipIntro"] ~=true)then
					setObjectAnimation(defend_dwall_tmp.council,"fire_wave",4000);
					timedExecute('callElementals()',4000);
					timedExecute('addCameraPosition(1500,"locElemental1",-70,55,15)',3500);
					speakPause(4500);
					changeTopic("itBegins");
				else
					addCameraPosition(0,"locEntryGeneral",-70,55,15);
					callElementals();
					insertTrigger("siegeBegins");
				end;
			</Effect>
		</Event>
		<Event trigger="itBegins" once="true">
			<Effect>
				speak("greif",_("Gebt Acht!"),"warcry")
				speak("greif",_("Katapulte!"),"warcry")
				changeTopic("siegeBegins");
			</Effect>
		</Event>
			
		<Event trigger="barrage">
			<Condition>
				return(defend_dwall.siegeEnded ~=true);
			</Condition>
			<Effect>
				barrage(20);
				startTimer("barrage",180000)
			</Effect>
		</Event>
		<Event trigger="siegeBegins" once="true">
			<Effect>
				addUnitCommand(defend_dwall_tmp.general,"guard","locEntryGeneral",9,"secondary");
				addUnitCommand(defend_dwall_tmp.council,"guard","locCouncilMage",5,"secondary");
			
				if(debug["dwall_siege"]["skipIntro"] ~=true)then
					addCameraPosition(2000,"locEntryGeneral",-90,55,25);
					for i = 0,10 do
						insertTrigger("newDefender");
						addTriggerVariable("index",50+i);
					end;
					insertTrigger("barrage");
					startTimer("wave1",1900);
				else
					insertTrigger("barrage");
					insertTrigger("wave1");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave1" once="true">
			<Effect>
				print("wave1")
				defend_dwall_tmp.phase="wave1"
				
				if(debug["dwall_siege"]["skipWave1"] ~=true)then
					addCameraPosition(1000,"locSpawn6",-90,55,30);
					timedExecute('setCutsceneMode(false)',2000);
				
					launchAttack(1112); --e1
					launchAttack(1114); --e1
					
					startTimer("wave1b",30000);
				else
					setCutsceneMode(false);
					insertTrigger("wave2");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave1b" once="true">
			<Effect>
				launchAttack(1121); --w2
				launchAttack(1213); --e1
				launchAttack(1125); --w2
				
				startTimer("wave1c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave1c" once="true">
			<Effect>
				launchAttack(1121); --w2
				launchAttack(1123); --w2
				launchAttack(1125); --w2
				
				startTimer("wave2",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave2" once="true">
			<Effect>
				print("wave2");
				defend_dwall_tmp.phase="wave2"
				if(debug["dwall_siege"]["skipWave2"] ~=true)then
					launchAttack(1222); --e2
					launchAttack(1224); --e2
	
					startTimer("wave2b",30000);
				else
					insertTrigger("wave3");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave2b" once="true">
			<Effect>
				launchAttack(1311); --m1
				launchAttack(1123); --w2
				launchAttack(1315); --m1
				
				startTimer("wave2c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave2c" once="true">
			<Effect>
				launchAttack(1211); --e1
				launchAttack(1323); --m2
				launchAttack(1215); --e1
				
				startTimer("wave3",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave3" once="true">
			<Effect>
				print("wave3");
				defend_dwall_tmp.phase="wave3"
				if(debug["dwall_siege"]["skipWave3"] ~=true)then
					launchAttack(1121); -- w2
					launchAttack(1223); -- e2
					launchAttack(1325); -- m2
					
					startTimer("wave3b",30000);
				else
					insertTrigger("wave4")
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave3b" once="true">
			<Effect>
			launchAttack(1121); --w2
			launchAttack(1112); --w1
			launchAttack(1123); --w2
			launchAttack(1114); --w1
			launchAttack(1125); --w2
			
			startTimer("wave3c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave3c" once="true">
			<Effect>
				launchAttack(1231); --e3
				launchAttack(1313); --m1
				launchAttack(1235); --e3
				
				startTimer("wave4",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave4" once="true">
			<Effect>
				print("wave4");
				defend_dwall_tmp.phase="wave4"
				if(debug["dwall_siege"]["skipWave4"] ~=true)then
				launchAttack(1221); --e2
				launchAttack(1413); --h1
				launchAttack(1225); --e2
					
					startTimer("wave4b",30000);
				elseif(debug["dwall_siege"]["skipFirePrep"] ~=true)then
					insertTrigger("firstBoss");
				else
					setDefenseHP(1);
					insertTrigger("wave5");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave4b" once="true">
			<Effect>
				launchAttack(1421); --h2
				launchAttack(1123); --w2
				launchAttack(1425); --h2
				
				startTimer("firstBoss",50000);
			</Effect>
		</Event>
		
		<Event trigger="firstBoss" once="true">
			<Effect>
				print("firstboss");
				defend_dwall_tmp.phase="boss1"
				launchAttack(5013); --boss
			</Effect>
		</Event>
		<Event trigger="unit_die" once="true">
			<Condition>
				return(get(trigger.unit,"subtype")=="boss1_siege");
			</Condition>
			<Effect>
				insertTrigger("changeView");
				addTriggerVariable("nextTrigger","firePrep");
			</Effect>
		</Event>
		
		<Event trigger="firePrep" once="true">
			<Effect>
				defend_dwall_tmp.phase="fire"
				addCameraPosition(0,"locLich",-65,35,9);
				fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
				
				addUnitCommand(defend_dwall_tmp.attendend1,"walk","locAttendend1");
			</Effect>
		</Event>
		
		<Event trigger="all_commands_complete" once="true">
			<Condition>
				return((trigger.unit==defend_dwall_tmp.attendend1) and (defend_dwall_tmp.phase=="fire"));
			</Condition>
			<Effect>
				initDialog()
				addImportantSpeakers();
			
				lookAt(defend_dwall_tmp.attendend1,"locLich");
				setSpeakerAnimation("att1","kneelDown",800);
				timedExecute('setObjectAnimation('..defend_dwall_tmp.attendend1..',"kneel",2000,true)',795)
			
				
				speak("lich", _("Sie wehren sich weiterhin."), "sneer");
				speak("att1", _("Keine Sorge, mein Gebieter, wir werden sie bald ueberrannt haben!"),"fear");
				speak("lich", _("Nur keine Hast."),"normal");
				speak("lich", _("Wir haben Zeit, das ist unser Vorteil."),"grin");
				speak("lich", _("Zeigen wir ihnen, dass wir auch mit Feuer spielen koennen."),"normal");
				speak("lich", _("Diese Magier gehen mir langsam auf den Geist."),"unhappy");
				speak("lich", _("Bereite alles vor."),"normal");
				speak("att1", _("Ich habe verstanden, mein Gebieter."),"normal");
				executeInDialog('insertTrigger("wave5")');
				
			</Effect>
		</Event>
	
		<Event trigger="wave5" once="true">
			<Effect>
				print("wave5")
				addUnitCommand(defend_dwall_tmp.attendend1,"walk","locEntryUndead");
				setCutsceneMode(false);
			
				defend_dwall_tmp.phase="wave5"
				if(debug["dwall_siege"]["skipWave5"] ~=true)then
					launchAttack(2212); --fe1
					launchAttack(2214); --fe1
					
					startTimer("wave5b",30000);
				else
					insertTrigger("wave6");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave5b" once="true">
			<Effect>
				launchAttack(2311); --fm1
				launchAttack(2223); --fe2
				launchAttack(2315); --fm1
				
				startTimer("wave5c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave5c" once="true">
			<Effect>
				launchAttack(1311); --m2
				launchAttack(2324); --fm2
				launchAttack(2225); --fe2
				
				startTimer("wave5d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave5d" once="true">
			<Effect>
				launchAttack(2321); --fm2
				launchAttack(2313); --fm1
				launchAttack(1215); --fe2
				
				startTimer("wave6",40000);
			</Effect>
		</Event>
		
		<Event trigger="wave6" once="true">
			<Effect>
				print("wave6");
				defend_dwall_tmp.phase="wave6"
				if(debug["dwall_siege"]["skipWave6"] ~=true)then
					launchAttack(2412); --fh1
					launchAttack(2323); --fm2
				
					startTimer("wave6b",30000);
				else
					insertTrigger("secondBoss");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave6b" once="true">
			<Effect>
				launchAttack(1322); --m2
				launchAttack(1223); --e2
				launchAttack(2425); --fh2
				
				startTimer("wave6c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave6c" once="true">
			<Effect>
				launchAttack(1221); --fe2
				launchAttack(2423); --h2
				launchAttack(1225); --fe2
				
				startTimer("wave6d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave6d" once="true">
			<Effect>
				launchAttack(2412); --fh1
				launchAttack(2314); --fm1
				launchAttack(1415); --h1
				
				startTimer("secondBoss",40000);
			</Effect>
		</Event>
		
		<Event trigger="secondBoss" once="true">
			<Effect>
				defend_dwall_tmp.phase="boss2"
				if(debug["dwall_siege"]["skip2ndBoss"] ~=true)then
					launchAttack(1312); --m1
					launchAttack(5023); --boss 2
					launchAttack(1314); --m1
				else
					setDefenseHP(2);
					insertTrigger("wave7pre");
				end;
			</Effect>
		</Event>
		
		<Event trigger="unit_die" once="true">
			<Condition>
				return(get(trigger.unit,"subtype")=="boss2_siege");
			</Condition>
			<Effect>
				--print("chilling death is dead")
				--print("incoming fireskeletons")
				startTimer("wave7pre",15000);
			</Effect>
		</Event>
		
		<Event trigger="wave7pre" once="true">
			<Effect>
				print("wave7");
				defend_dwall_tmp.phase="endlessStream"
				if(debug["dwall_siege"]["skipWave7"] ~=true)then
					skeletonBarrage(8);
					startTimer("wave7",15000);
				else
					insertTrigger("wave7");
				end;
			</Effect>
		</Event>

		<Event trigger="wave7" once="true">
			<Effect>
				defend_dwall_tmp.phase="wave7"
				if(debug["dwall_siege"]["skipWave7"] ~=true)then
					launchAttack(3212); --ee1
					launchAttack(3214); --ee1
					
					startTimer("wave7b",30000);
				else
					insertTrigger("wave8");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave7b" once="true">
			<Effect>
				launchAttack(3311); --em1
				launchAttack(3312); --em1
				launchAttack(3215); --ee2
				
				startTimer("wave7c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave7c" once="true">
			<Effect>
				launchAttack(3222); --ee2
				launchAttack(3324); --em2
				launchAttack(1215); --e2
				
				startTimer("wave7d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave7d" once="true">
			<Effect>
				launchAttack(1413); --h1
				launchAttack(3224); --ee2
				
				startTimer("wave8",40000);
			</Effect>
		</Event>
		
		<Event trigger="wave8" once="true">
			<Effect>
				print("wave8");
				defend_dwall_tmp.phase="wave8"
				if(debug["dwall_siege"]["skipWave8"] ~=true)then
					launchAttack(1312); --m1
					launchAttack(3315); --em1
					
					startTimer("wave8b",30000);
				else
					insertTrigger("prepareTheSavage");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave8b" once="true">
			<Effect>
				launchAttack(3423); --eh2
				launchAttack(1324); --em2
				launchAttack(1215); --e1
				
				startTimer("wave8c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave8c" once="true">
			<Effect>
				launchAttack(3411); --eh1
				launchAttack(1223); --e2
				launchAttack(1325); --m2
				
				startTimer("wave8d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave8d" once="true">
			<Effect>
				launchAttack(1422); --h2
				launchAttack(3223); --ee2
				launchAttack(3424); --eh2
				
				startTimer("wave8post",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave8post" once="true">
			<Effect>
				print("wave8post");
				startTimer("changeView",10000);
				addTriggerVariable("nextTrigger","prepareTheSavage");
			</Effect>
		</Event>
		<Event trigger="prepareTheSavage">
			<Effect>
				if(debug["dwall_siege"]["skip3rdBoss"]~=true)then
					if(debug["dwall_siege"]["skipWave8"] ==true)then
						setCutsceneMode(true);
					end;
					defend_dwall_tmp.phase="boss3prep"
					addCameraPosition(0,"locLich",-65,35,9);
					fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
					addUnitCommand(defend_dwall_tmp.attendend2,"walk","locAttendend2");
				else
					insertTrigger("wave9pre");
				end;
			</Effect>
		</Event>
		<Event trigger="all_commands_complete" once="true">
			<Condition>
				return((trigger.unit==defend_dwall_tmp.attendend2) and (defend_dwall_tmp.phase=="boss3prep"));
			</Condition>
			<Effect>
				setCutsceneMode(true);
				addCameraPosition(0,"locLich",-65,35,9);
				
				initDialog()
				addImportantSpeakers();
			
				lookAt(defend_dwall_tmp.attendend2,"locLich");
				setSpeakerAnimation("att2","kneelDown",800);
				timedExecute('setObjectAnimation('..defend_dwall_tmp.attendend2..',"kneel",2000,true)',795)
			
				
				speak("att2", _("Ihre Verteidigung haelt noch immer stand, mein Gebieter"),"normal");
				speak("lich", _("Niemand hat verlangt, dass es einfach sein muss."), "normal");
				speak("lich", _("Wusstest du, dass es hier vor zweihundert Jahren einen Wilden gab?"), "normal");
				speak("lich", _("Die Menschen nannten ihn den Riesentoeter und wollten nichts mit ihm zu tun haben."), "normal");
				speak("att2", _("Ich verstehe nicht, was das mit der Belagerung zu tun hat, mein Gebieter"),"surprised");
				speak("lich", _("Sieh zu und lerne."),"grin");
				setSpeakerAnimation("lich","summon_skelBow",2000);
				executeInDialog('insertTrigger("eyesOnBoss")');
			</Effect>
		</Event>
		<Event trigger="eyesOnBoss" once="true">
			<Effect>
				defend_dwall_tmp.phase="boss3"
				addCameraPosition(1500,"locSpawn4",-65,35,11);
			</Effect>
		</Event>

		
		<Event trigger="all_camera_moves_complete" once="true">
			<Condition>
				return((defend_dwall_tmp.phase=="boss3"));
			</Condition>
			<Effect>
				launchAttack(5033); --boss
				timedExecute('setCutsceneMode(false)',4000);
			</Effect>
		</Event>
		<Event trigger="unit_die" once="true">
			<Condition>
				return(get(trigger.unit,"subtype")=="boss3_siege");
			</Condition>
			<Effect>
				startTimer("wave9pre",10000);
			</Effect>
		</Event>
		
		<Event trigger="wave9pre" once="true">
			<Effect>
				print("wave9");
				setDefenseHP(4);
				if(debug["dwall_siege"]["skipWave9"]~=true)then
					skeletonBarrage(12)
					startTimer("wave9",30000);
				else
					insertTrigger("wave9");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave9" once="true">
			<Effect>
				defend_dwall_tmp.phase="wave9"
				
				if(debug["dwall_siege"]["skipWave9"]~=true)then
					launchAttack(2211); -- fe1
					launchAttack(1215); -- e1
					
					startTimer("wave9b",30000);
				else
					insertTrigger("wave10");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave9b" once="true">
			<Effect>
				launchAttack(1222); -- e2
				launchAttack(3213); -- ee1
				launchAttack(3224); -- ee2
				
				startTimer("wave9c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave9c" once="true">
			<Effect>
				launchAttack(1213); -- e1
				launchAttack(3314); -- em1
				launchAttack(3325); -- em2
				
				startTimer("wave9d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave9d" once="true">
			<Effect>
				launchAttack(1321); -- m2
				launchAttack(1212); -- e1
				launchAttack(2223); -- fe2
				launchAttack(1324); -- m2
				
				startTimer("wave10",45000);
			</Effect>
		</Event>

		<Event trigger="wave10" once="true">
			<Effect>
				print("wave10");
				defend_dwall_tmp.phase="wave10"
				
				if(debug["dwall_siege"]["skipWave10"]~=true)then
					launchAttack(3311); -- em1
					launchAttack(1213); -- e1
					launchAttack(2315); -- fm1
				
					startTimer("wave10b",35000);
				else
					insertTrigger("prepareTheBrothers");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave10b" once="true">
			<Effect>
				launchAttack(1212); -- e1
				launchAttack(1413); -- h1
				launchAttack(1314); -- m1
				
				startTimer("wave10c",35000);
			</Effect>
		</Event>
		
		<Event trigger="wave10c" once="true">
			<Effect>
				launchAttack(2323); -- fm2
				launchAttack(2424); -- fh2
				launchAttack(2225); -- fe2
				
				startTimer("wave10d",35000);
			</Effect>
		</Event>
		
		<Event trigger="wave10d" once="true">
			<Effect>
				launchAttack(3311); -- em1
				launchAttack(3412); -- eh1
				launchAttack(3323); -- em2
				
				startTimer("prepareTheBrothers",30000);
			</Effect>
		</Event>
		
		<Event trigger="prepareTheBrothers" once="true">
			<Effect>
				defend_dwall_tmp.phase="the4thBoss"
				
				if(debug["dwall_siege"]["skip4thBoss"]~=true)then
					setCutsceneMode(true);
					
					addCameraPosition(0,"locLich",-65,35,9);
					fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
					addUnitCommand(defend_dwall_tmp.attendend1,"walk","locAttendend1");
				else
					insertTrigger("frostHasCome");
				end;
			</Effect>
		</Event>
		
		<Event trigger="all_commands_complete" once="true">
			<Condition>
				return((trigger.unit==defend_dwall_tmp.attendend1) and (defend_dwall_tmp.phase=="the4thBoss"));
			</Condition>
			<Effect>
				initDialog()
				addImportantSpeakers();
			
				lookAt(defend_dwall_tmp.attendend1,"locLich");
				setSpeakerAnimation("att1","kneelDown",800);
				timedExecute('setObjectAnimation('..defend_dwall_tmp.attendend1..',"kneel",2000,true)',795)
			
				
				speak("att1", _("Ihr habt gerufen, mein Gebieter?"),"normal");
				speak("lich", _("Ich will, dass ihr die Brueder einsetzt."), "sneer");
				speak("att1", _("Aber die sind noch immer nicht stabil!"),"fear");
				speak("att1", _("Im schlimmsten Fall werden sie dem Gegner ueberhaupt keinen Schaden zufuegen."), "fear");
				speak("lich", _("Das spielt keine Rolle."),"normal");
				speak("lich", _("Er muesste bald hier sein. Im Moment schinden wir nur Zeit."),"normal");
				speak("att1", _("Wie ihr Befehlt, mein Gebieter."),"normal");
				executeInDialog('insertTrigger("changeView");addTriggerVariable("nextTrigger","boss4");');
				
			</Effect>
		</Event>

		<Event trigger="boss4" once="true">
			<Effect>
				addUnitCommand(defend_dwall_tmp.attendend1,"walk","locEntryUndead");
				setCutsceneMode(false);
				fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
			
				defend_dwall_tmp.phase="boss4"
				launchAttack(1413); -- h1
				launchAttack(5043); --boss
			</Effect>
		</Event>
		<Event trigger="unit_die" once="true">
			<Condition>
				return(get(trigger.unit,"subtype")=="boss4_siege");
			</Condition>
			<Effect>
				insertTrigger("changeView");
				addTriggerVariable("nextTrigger","frostHasCome")
			</Effect>
		</Event>
		
		<Event trigger="frostHasCome" once="true">
			<Effect>
				defend_dwall_tmp.phase="frost"
				if(debug["dwall_siege"]["skipIntroNeivan"]~=true)then
					setCutsceneMode(true);
					addCameraPosition(0,"locLich",-65,35,9);
					fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
					addUnitCommand(defend_dwall_tmp.attendend2,"walk","locAttendend2");
					
					defend_dwall_tmp.frost = createObject("boss5_siege","locEntryUndead");
					addUnitCommand(defend_dwall_tmp.frost,"walk","locAttendend1");
				else
					insertTrigger("wave11");
				end;
			</Effect>
		</Event>
		
		<Event trigger="all_commands_complete" once="true">
			<Condition>
				return((trigger.unit==defend_dwall_tmp.attendend2) and (defend_dwall_tmp.phase=="frost"));
			</Condition>
			<Effect>
				initDialog()
				addImportantSpeakers();
				addSpeaker(defend_dwall_tmp.frost,"frost")
				
				lookAt(defend_dwall_tmp.attendend2,"locLich");
				setSpeakerAnimation("att2","kneelDown",800);
				timedExecute('setObjectAnimation('..defend_dwall_tmp.attendend2..',"kneel",2000,true)',795)
			
				
				speak("att2", _("Mein Gebieter."),"normal");
				speak("lich", _("Was ist?"), "normal");
				speak("att2", _("Neivan der Frostbringer ist jetzt hier."),"normal");
				speak("lich", _("Endlich."), "normal");
				speak("frost", _("Der Weg aus der Grauen Himmelsleiter in diese Trostlos verdorrte Ebene war eben lang."), "bored");
				speak("lich", _("Und deine Bergspitzen sind lebendiger?"),"sneer");
				speak("frost", _("Sind wir hier um die letzten Krabbelkaefer in unseren Laendereien zu zaehlen?"), "grin");
				speak("lich", _("Du hast Recht. Koenntest du mir diese wirklich enervierenden Leute da vorn aus dem Weg raeumen?"),"sneer");
				speak("frost", _("Deswegen bin ich hier."), "normal");
				speak("frost", _("Und vergiss nicht, dass du mir danach Land schuldest."), "normal");
				speak("lich", _("Glaubst du wirklich, ich wuerde zwei Doerfer vermissen, nachdem ich Zwergentrutz endlich habe?"),"unhappy");
				speak("frost", _("Ich und meine Frostmagier werden schon dafuer sorgen."), "normal");
				executeInDialog('insertTrigger("wave11")');
			</Effect>
		</Event>
		
		<Event trigger="wave11" once="true">
			<Effect>
				print("wave11");
				setDefenseHP(5);
				setCutsceneMode(false);
				defend_dwall_tmp.phase="wave11"
				
				if(debug["dwall_siege"]["skipWave11"]~=true)then
					
					launchAttack(1221); --e2
					launchAttack(1223); --e2
					launchAttack(1225); --e2
									
					startTimer("wave11b",30000);
				else
					insertTrigger("wave12");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave11b" once="true">
			<Effect>
				launchAttack(4212); -- be1
				launchAttack(1213); -- e1
				launchAttack(4214); -- be1
				
				startTimer("wave11c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave11c" once="true">
			<Effect>
				launchAttack(4313); -- bm1
				launchAttack(1224); -- e2
				launchAttack(2225); -- fe2
				
				startTimer("wave11d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave11d" once="true">
			<Effect>
				launchAttack(3211); -- ee1
				launchAttack(3322); -- em2
				launchAttack(4323); -- bm2
				
				startTimer("wave12pre",40000);
			</Effect>
		</Event>
		
		<Event trigger="wave12pre" once="true">
			<Effect>
				print("wave12");
				skeletonBarrage(10);
				
				startTimer("wave12",20000);
			</Effect>
		</Event>
		
		<Event trigger="wave12" once="true">
			<Effect>
				defend_dwall_tmp.phase="wave12"
				
				if(debug["dwall_siege"]["skipWave12"]~=true)then
					launchAttack(4311); -- bm1
					launchAttack(1323); -- m2
					launchAttack(4325); -- bm2
					
					startTimer("wave12b",35000);
				else
					insertTrigger("boss5");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave12b" once="true">
			<Effect>
				launchAttack(2213); -- fe1
				launchAttack(4414); -- bh1
				launchAttack(2225); -- fe2
				
				startTimer("wave12c",35000);
			</Effect>
		</Event>
		
		<Event trigger="wave12c" once="true">
			<Effect>
				launchAttack(4421); -- bh2
				launchAttack(3312); -- em1
				launchAttack(1323); -- m2
				
				startTimer("wave12d",35000);
			</Effect>
		</Event>
		
		<Event trigger="wave12d" once="true">
			<Effect>
				launchAttack(2321); -- fm2
				launchAttack(4413); -- bh1
				launchAttack(3325); -- em2
				
				startTimer("boss5",35000);
			</Effect>
		</Event>
		
		<Event trigger="boss5" once="true">
			<Effect>
				defend_dwall_tmp.phase="boss5"

				if(debug["dwall_siege"]["skip5thBoss"]~=true)then
					launchAttack(4423); --bh2
					launchAttack(5053); --boss
				else
					insertTrigger("wave13");
				end;
			</Effect>
		</Event>
		<Event trigger="unit_die" once="true">
			<Condition>
				return(get(trigger.unit,"subtype")=="boss5_siege");
			</Condition>
			<Effect>
				defend_dwall_tmp.suspend = false;
				insertTrigger("changeView");
				addTriggerVariable("nextTrigger","sendingBlackmages")
			</Effect>
		</Event>
		
		<Event trigger="sendingBlackmages" once="true">
			<Effect>
				defend_dwall_tmp.phase="blackMagic"
				addCameraPosition(0,"locLich",-65,35,9);
				fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
				addUnitCommand(defend_dwall_tmp.attendend1,"walk","locAttendend1");
			</Effect>
		</Event>
		
		<Event trigger="all_commands_complete" once="true">
			<Condition>
				return((trigger.unit==defend_dwall_tmp.attendend1) and (defend_dwall_tmp.phase=="blackMagic"));
			</Condition>
			<Effect>
				initDialog()
				addImportantSpeakers();
			
				lookAt(defend_dwall_tmp.attendend1,"locLich");
				setSpeakerAnimation("att1","kneelDown",800);
				timedExecute('setObjectAnimation('..defend_dwall_tmp.attendend1..',"kneel",2000,true)',795)
			
				speak("att1", _("Der Frostbringer ist tot, mein Gebieter."),"fear");
				speak("lich", _("Ich habe es auch gespuert."), "unhappy");
				speak("att1", _("Wir haben endlich etwas ueber die Verstaerkung erfahren, die das Konzil hier her geschickt hat."),"fear");
				speak("lich", _("Ausgerechnet jetzt?"), "surprised");
				speak("lich", _("Und was ist damit? Ich dachte, es gaebe gar keine."),"normal");
				speak("att1", _("Doch, mein Gebieter. Aber es handelt sich dabei anscheinend um Gezeichnete."),"normal");
				speak("lich", _("Gezeichnete!"), "angry");
				speak("lich", _("Das erklaert einiges."), "angry");
				speak("lich", _("Aber auch sie werden die Stadt nicht halten koennen, wenn die elenden Menschen erst mal alle tot sind."), "angry");
				speak("lich", _("Ueberrennt sie. Und schick deinen Orden aus."), "angry");
				speak("att1", _("Sehr wohl, mein Gebieter."),"normal");
				speak("att1", _("Notfalls werde auch ich, der Schwarze Rabe selbst, in die Schlacht ziehen."),"normal");
				speak("lich", _("Ich zaehle auf dich."), "normal");
				speak("lich", _("Reisst ihre Verteidigung in Stuecke."), "normal");
				executeInDialog('insertTrigger("wave13");');
			</Effect>
		</Event>

		
		<Event trigger="wave13" once="true">
			<Effect>
				print("wave13");
				setCutsceneMode(false);
				setDefenseHP(6);
				
				defend_dwall_tmp.phase="wave13"
				
				if(debug["dwall_siege"]["skipWave13"]~=true)then
					launchAttack(2221); -- fe2
					launchAttack(4223); -- be2
					launchAttack(3225); -- ee2
					
									
					startTimer("wave13b",30000);
				else
					insertTrigger("wave14");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave13b" once="true">
			<Effect>
				launchAttack(1222); -- e2
				launchAttack(5213); -- xe1
				launchAttack(1224); -- e2
				
				startTimer("wave13c",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave13c" once="true">
			<Effect>
				launchAttack(5221); -- xe2
				launchAttack(4312); -- bm1
				launchAttack(2215); -- fe1
				
				startTimer("wave13d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave13d" once="true">
			<Effect>
				launchAttack(5312); -- xm1
				launchAttack(3223); -- ee2
				launchAttack(5324); -- xm2
				
				startTimer("wave14",40000);
			</Effect>
		</Event>
		
		<Event trigger="wave14" once="true">
			<Effect>
				print("wave14")
				defend_dwall_tmp.phase="wave14"
				
				if(debug["dwall_siege"]["skipWave14"]~=true)then
					launchAttack(1313); -- m1
					launchAttack(4414); -- bh1
					launchAttack(4225); -- be2
					
					startTimer("wave14b",30000);
				else
					insertTrigger("boss6");
				end;
			</Effect>
		</Event>
		
		<Event trigger="wave14b" once="true">
			<Effect>
				launchAttack(3411); -- eh1
				launchAttack(3322); -- em2
				launchAttack(5225); -- xe2
				
				startTimer("wave14c",35000);
			</Effect>
		</Event>
		
		<Event trigger="wave14c" once="true">
			<Effect>
				launchAttack(4312); -- bm1
				launchAttack(5413); -- xh1
				launchAttack(2324); -- fm2
				
				startTimer("wave14d",30000);
			</Effect>
		</Event>
		
		<Event trigger="wave14d" once="true">
			<Effect>
				launchAttack(5321); -- xm2
				launchAttack(1413); -- h1
				launchAttack(5325); -- xm2
				
				startTimer("boss6",35000);
			</Effect>
		</Event>
		
		<Event trigger="boss6" once="true">
			<Effect>
				defend_dwall_tmp.phase="boss6"
				
				launchAttack(2321); -- fm1
				launchAttack(4212); -- be1
				launchAttack(1413); -- xh1
				launchAttack(4214); -- be1
				launchAttack(3325); -- em2
				timedExecute("launchAttack(5063)",3000); -- boss
			</Effect>
		</Event>
		<Event trigger="unit_die" once="true">
			<Condition>
				return(get(trigger.unit,"subtype")=="boss6_siege");
			</Condition>
			<Effect>
				print("the siege has ended");
				insertTrigger("changeView");
				addTriggerVariable("nextTrigger","theSiegeEnds");
			</Effect>
		</Event>
		
		<Event trigger="theSiegeEnds">
			<Effect>
				fadeIn(2000, {0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3});
				groupObjectsArc(getPlayers(),"entry_south","locEntryGeneral");
				addCameraPosition(0,"locLich",-65,35,9);
				setCutsceneMode(true);
				
				initDialog()
				addImportantSpeakers();
				
				speak("lich", _("Verdammt sollen sie sein!"),"warcry");
				speak("lich", _("Verdammte Konzilsmagier!"),"angry");
				speak("lich", _("Verdammte Gezeichnete!"),"angry");
				speak("lich", _(""),"angry",2000);
				speak("lich",_("Was solls."),"unhappy");
				speak("lich",_("Am Ende werde ich doch triumphieren."),"unhappy");
				speak("lich",_("Der Tod gewinnt immer."),"threaten");
				changeTopic("theLichLeaves");
			</Effect>
		</Event>
		<Event trigger="theLichLeaves">
			<Effect>
				defend_dwall_tmp.phase="aftermath"
				
				addUnitCommand(defend_dwall_tmp.lich,"walk","locEntryUndead");
				
				addCameraPosition(1000,"locLich",-65,35,9);
				addCameraPosition(4000,"locEntryGeneral",-70,55,15);
				
				lookAt(defend_dwall_tmp.general,"entry_south");
				lookAt(defend_dwall_tmp.council,"entry_south");
			</Effect>
		</Event>
		
		<Event trigger="all_camera_moves_complete">
			<Condition>
				return(defend_dwall_tmp.phase=="aftermath");
			</Condition>
			<Effect>
				initDialog()
				addImportantSpeakers();
				
				speak("greif",_("Es ist vorbei."),"injured2");
				speak("darna",_("Und Dank der Unterstuetzung des Konzils steht die Stadt noch."),"amused");
				--TODO ernstzunehmende Werte eintragen
				if(500 > defend_dwall_tmp.penalty)then
					speak("greif",_("Ich muss gestehen, ich haette mir in meinen kuensten Traeumen nicht ausmalen koennen, dass jemand so kaempft."),"thoughtful");
					if(solo() and maleOnly())then
						speak("greif", _("Es ist gut, dass er momentan auf unserer Seite steht."),"happy");
					elseif(solo() and femaleOnly())then
						speak("greif", _("Es ist gut, dass sie momentan auf unserer Seite steht."),"happy");
					else
						speak("greif", _("Es ist gut, dass sie momentan auf unserer Seite stehen."),"happy");
					end;
					
					speak("arcopt",_("Wenn beide Seiten Seelen anzubieten haben, nimmt man natuerlich die, die auch bezahlt."),"grin");
					speak("greif","","unhappy");
					speak("greif",_("Danke, dass Ihr mich daran erinnert, warum ich Eure Sorte nicht leiden kann."),"unhappy");
					speak("arcopt",_("Es gibt da keinen grossen Unterschied zu normalen Soeldnern."),"amused");
					speak("arcopt",_("Ausser vielleicht, dass Gezeichnete nicht einfach mitten drin die Seiten wechseln."),"sneer");
					speak("darna",_("Genug davon. Reden wir im Kommandozentrum weiter."),"aloof");
					speak("darna",_("Es waere wohl nicht klug, die Soldaten mit der Nase auf ihre Retter zu stossen."),"aloof");
					
					defend_dwall.outcome="godlike";
				elseif(1500 > defend_dwall_tmp.penalty)then
					speak("greif",_("Allerdings."),"unhappy");
					if(solo() and maleOnly())then
						speak("greif",_("Ohne Euren 'Freund' hier saehe das anders aus."),"unhappy");
					elseif(solo() and femaleOnly())then
						speak("greif",_("Ohne Eure 'Freundin' hier saehe das anders aus."),"unhappy");
					else
						speak("greif",_("Ohne Eure 'Freunde' hier saehe das anders aus."),"unhappy");
					end;
					
					defend_dwall.outcome="average";
				elseif(2500 > defend_dwall_tmp.penalty)then
					speak("greif",_("Immerhin effektiver, als man das von einer Soeldnertruppe haette erwarten koennen."),"injured2");
					speak("greif",_("Aber wir haben einiges an Verlusten eingefahren."),"unhappy");
					speak("greif",_("Ich hoffe, die kommen nicht so schnell auf die Idee, einen zweiten Angriff zu starten."),"unhappy");
					speak("greif",_("Bisher hat sich dieser Lich zwar immer Zeit gelassen, aber bisher hatte er auch keine Unterstuetzung."),"unhappy");
					speak("darna",_("Genug davon. Reden wir im Kommandozentrum weiter."),"aloof");
					
					defend_dwall.outcome="bad";
				else
					speak("greif",_("Welche Unterstuetzung denn bitte?"),"angry");
					speak("greif",_("Zwei Drittel meiner Leute sind tot!"),"angry");
					speak("greif",_("Einen zweiten Angriff werden wir niemals ueberleben."),"angry");
					speak("darna",_("Genug davon. Reden wir im Kommandozentrum weiter."),"unhappy");
					speak("darna",_("Ich will endlich von dem ganzen Blut weg."),"sad");
					
					defend_dwall.outcome="worst";
				end;
				
				changeTopic("cleanAfterSiege")
			</Effect>
		</Event>
		<Event trigger="cleanAfterSiege">
			<Effect>
				defend_dwall.siegeEnded = true;
				setCutsceneMode(false);
			</Effect>
		</Event>
	</Region>
	
	<Region name="dwarfenwallCommand">
		<Event trigger="enter_region" once="true">
			<Condition>
				--TODO: Weitere condition
				return (defend_dwall.siegeEnded == true)
			</Condition>
			<Effect>
				defend_dwall_tmp.aftermath = true;
				assembleParty("dwarfenwallCommand","locParty");
			</Effect>
		</Event>
		
		<Event trigger="party_complete" once="true">
			<Condition>
				return (defend_dwall_tmp.aftermath == true)
			</Condition>
			<Effect>
				defend_dwall_tmp.aftermath = false;
				
				setCutsceneMode(true);
				addCameraPosition(0,"locCamera",-80,55,15);
				
				groupObjectsArc(getPlayers(),"locParty","locCamera");
				addUnitCommand(getPartyleader(),"walk","locLeader");
				
				lookAt(dwarfenwall.general,"locCamera");
				lookAt(dwarfenwall.council,"locCamera");
				
				initDialog();
				
				addSpeaker(dwarfenwall.general, "general");
				addSpeaker(dwarfenwall.council, "council");
				
				if(defend_dwall.outcome=="godlike" or defend_dwall.outcome=="average")then
					speak("general",_("hmpf"),"aloof");
					speak("general",_("Gut geschlagen."),"normal");
					if(solo())then
						speak("general",_("Wenigstens seid Ihr den Aerger wert. _solo"),"normal");
						speak("any",_("Als ob ich jemals welchen gemacht haette."),"unhappy");
					else
						speak("general",_("Wenigstens seid ihr den Aerger wert."),"normal");
						speak("any",_("Als ob wir jemals welchen gemacht haetten."),"unhappy");
					end;
				end;
				
				
				speak("leader",_("Die Stadt ist nur fuer den Augenblick sicher."),"normal");
				speak("leader",_("Wir koennen uns jetzt nicht ausruhen."),"normal");
				if(defend_dwall.outcome=="worst")then
					speak("general",_("Als ob wir nicht schon genug mit dem Personalmangel zu kaempfen haetten."),"angry");
				end;
				speak("council",_("Die Quelle der Angriffe ist der Lich!"),"aloof");
				speak("council",_("Er muss vernichtet werden!"),"aloof");
				
				speak("general",_("Und wer?!"),"angry");
				speak("general",_("Ich habe nicht genug Maenner, um einen Ausfall mit Erfolg zu fuehren."),"unhappy");
				speak("general",_("Das waere Selbstmord!"),"sad");
				
				speak("council",_("Das hat nichts mit Euch zu tun."),"unhappy");
				if(solo() and maleOnly())then
					speak("council",_("Dieser Mann steht unter meinem direkten Befehl."),"aloof");
				elseif(solo())then
					speak("council",_("Diese Frau steht unter meinem direkten Befehl."),"aloof");
				else
					speak("council",_("Diese Leute stehen unter meinem direkten Befehl."),"aloof");
				end;
				
				speak("priopt",_("In ihrer unentspannten Art erinnert sie mich an einen gewissen anderen Konzilsmagier."),"thougful");
				
				speak("general",_("Ihr schickt sie in den sicheren Tod!"),"angry");
				if(defend_dwall.outcome=="worst")then	
					speak("general",_("Nicht, dass mich das stoeren wuerde, aber wir koennen momentan niemanden verschwenden!"),"unhappy");
					speak("leader",_("Nur kein falsches Mitleid."),"unhappy");
					speak("leader",_("Egal wie oft ich sterbe, der Lich wird am Ende vernichtet sein."),"threaten");
					setSpeakerEmotion("leader","normal");
					speak("general",_("Ausser um euch selbst kuemmert ihr euch doch um niemanden!"),"angry");
				else
					speak("leader",_("Das waere nicht das erste Mal..."),"amused")
					speak("council",_("Wollt ihr mir vorschreiben, wie ich meine Leute einsetze?"),"unhappy");
					speak("general",_("Niemand verdient eine solche Behandlung, nicht einmal die."),"unhappy");
					if(solo())then
						speak("leader",_("Lasst das meine Sorge sein."),"amused")
					else
						speak("leader",_("Lasst das unsere Sorge sein."),"amused")
					end;
					speak("general",_("Euch ist wirklich nicht zu helfen"),"unhappy");
				end;
				
				speak("mage",_("Endlich hat er es auch kapiert."),"sneer");
				speak("council",_("Wir haben keine Zeit für kleinliche Streitereien! Geht und erschlagt den Lich!"),"unhappy");
				speak("leader",_("Wie ihr wuenscht..."),"unhappy");
				if((getSpeaker("archer")~=nil) and (getSpeaker("priest")~=nil))then
					speak("archer",_("So ein Pfeil koennte im Eifer des Gefechts doch von ueberall gekommen sein..."),"thoughtful");
					speak("priest",_("Denk nicht mal drueber nach."),"unhappy");
				end;
				changeTopic("setOutForTheLich")
			</Effect>
		</Event>
		<Event trigger="command_complete" once="true">
			<Condition>
				if(trigger.unit==getPartyleader())then
					return (defend_dwall.siegeEnded == true);
				else
					return false;
				end;
			</Condition>
			<Effect>
				lookAt(trigger.unit,"locCamera");
			</Effect>
		</Event>
		
		<Event trigger="setOutForTheLich" once="true">
			<Effect>
				setCutsceneMode(false);
				defend_dwall.theLich = true;
			</Effect>
		</Event>
	</Region>
	
	<Region name="dwarfenwall">
		<Event trigger="enter_region" once="true">
			<Condition>
				return (defend_dwall.theLich == true);
			</Condition>
			<Effect>
				local stone = getObjectByNameRef("blocadeNorth");
				getObjectOutOfWay(stone);
			</Effect>
		</Event>
	</Region>
	
	<Region name="necFieldcamp">
		<Event trigger="create_region">
			<Condition>
				return ((defend_dwall.theLich == true) and (defend_dwall.finished ~= true))
			</Condition>
			<Effect>
				addArea("areaGathering",{"circle",{0,0},10000});
				for i = 1, 7 do
					createMonsterGroup("campSkeletons", "locSpawn"..i, 4);
				end;
				-- guardian group of the treasury
				createMonsterGroup("campSkeletons", "locSpawn8", 4);
				
				local nec = createObject("necromancer_black_attendend","locAttendend");
				lookAt(nec,"locParty");
				defend_dwall_tmp.lich = createObject("asoroth","locLich");
				lookAt(defend_dwall_tmp.lich,"locParty");
			</Effect>
		</Event>

		<Event trigger="player_moved" once = "true">
			<Condition>
				if(unitIsInArea(trigger.player,"areaLich"))then
					return ((defend_dwall.theLich == true) and (defend_dwall.finished ~= true))
				else
					return false;
				end;
			</Condition>
			<Effect>
				defend_dwall_tmp.lichTalk = true;
				setCutsceneMode(true);
				fadeOut(500);
				addCameraPosition(0,"locParty", -90, 55, 16);
				assembleParty("necFieldcamp","locParty");
				startTimer("lichFinalSpeachStart",900);
			</Effect>
		</Event>
		<Event trigger="party_complete" once="true">
			<Condition>
				return(defend_dwall_tmp.lichTalk == true);
			</Condition>
			<Effect>
				print("group objects")
				startTimer("group",1000);
				defend_dwall_tmp.lichTalk = false;
			</Effect>
		</Event>
		<Event trigger="group">
			<Effect>
				groupObjectsArc(getPlayers(),"locParty","locLich", nil, 120)
			</Effect>
		</Event>
		
		<Event trigger="lichFinalSpeachStart" once="true">
			<Effect>
				fadeIn(1000,{0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3})
				addCameraPosition(0,"locLich", -110, 30, 12)
				
				initDialog()
				addSpeaker(defend_dwall_tmp.lich,"lich");
				speakPause(1000);
				speak("lich",_("Sieh an."),"amused");
				speak("lich",_("Da ist ja die Wurzel meines kleinen Problems."),"unhappy");
				speak("lich",_("Kaum zu glauben, dass jemand so verrueckt ist, hier raus zu stuermen."),"amused");
				
				changeTopic("lichFinalSpeachIntermediate");
			</Effect>
		</Event>
		<Event trigger="lichFinalSpeachIntermediate" once="true">
			<Effect>
				addCameraPosition(1500,"locCamera", -110, 70, 24)
				
				speak("leader",_("Mach dich bereit, fuer immer zu vergehen!"),"grin");
				
				if(solo() and maleOnly())then
					speak("lich",_("Kaum zu glauben, dass ein einziger Gezeichneter ausreicht, um so viel Chaos zu verursachen."),"surprised");
				elseif(solo())then
					speak("lich",_("Kaum zu glauben, dass eine einzige Gezeichnete ausreicht, um so viel Chaos zu verursachen."),"surprised");
				else
					speak("lich", _("Natuerlich, wenn ein paar Gezeichnete in der Naehe sind ist alles ein wenig anders."),"thoughtful");
				end;
				speak("waropt", _("Erntezeit!!"),"warcry");
				speak("lich",_("Nicht so hastig."),"threaten");
				setSpeakerEmotion("waropt","normal");
				if(solo())then
					speak("lich",_("Sicher, Ihr seid unsterblich, oder so sagt man zumindest, aber Schmerzen spürt Ihr doch trotzdem noch, nicht wahr? _solo"),"amused");
					speak("lich",_("Wollt Ihr Euch wirklich immer und immer wieder von mir in Stuecke hacken lassen? _solo"),"threaten");
				else
					speak("lich",_("Sicher, ihr seid unsterblich, oder so sagt man zumindest, aber Schmerzen spürt ihr doch trotzdem noch, nicht wahr?"),"amused");
					speak("lich",_("Wollt ihr euch wirklich immer und immer wieder von mir in Stuecke hacken lassen?"),"threaten");
				end;
				speak("waropt", _("Pah! Deine Skelette sind alle schon Staub und der eine Lakei wird dich nicht retten!"),"sneer");
				speak("lich",_("Wo Ihr es so erwaehnt..."),"amused");
				speak("lich",_("Ihr habt tatsaechlich die meisten in Stuecke geschlagen."),"unhappy");
				speak("lich",_("Dennoch ein verkraftbarer Verlust."),"normal");
				speak("lich",_("Die Menschen in Zwergentrutz werden mir sicherlich beim Aufstellen einer neuen Armee behilflich sein."),"grin");
				if(fissure.listened == true)then
					speak("leader", _("Was ist das eigentlich fuer ein Kristall, den deine verrotteten Herren wollen, Kettenhund?"),"normal");
					--TODO: lich lachen
					speak("lich", _("Du kannst mich nicht wuetend machen."),"sneer");
					speak("lich", _("Und was den Kristall angeht, so fragt Ihr vielleicht lieber Eure Auftraggeber?"),"sneer");
					speak("leader",_("..."),"unhappy",2000);
					speak("lich",_("Das dachte ich mir."),"grin");
					speak("lich",_("Die Elementaristen sind nicht besonders gespraechig, habe ich recht?"),"grin");
				end;
				speak("priopt",_("Deine Rede ist so faul wie der Rest deines Koerpers."),"angry");
				
				speak("waropt",_("Stirb!"),"angry");
				changeTopic("lichTalkFinalThreats");
				
			</Effect>
		</Event>
		<Event trigger="lichTalkFinalThreats" once="true">
			<Effect>
				groupTalk(_("Erntezeit!"),"warcry")
				speakPause(1000);
				if(solo())then
					speak("lich",_("Habt Ihr eigentlich gewusst, dass es hier eine Menge ungebundener Seelen in der Luft gibt? _solo"),"grin");
				else
					speak("lich",_("Habt ihr eigentlich gewusst, dass es hier eine Menge ungebundener Seelen in der Luft gibt?"),"grin");
				end;
				changeTopic("lichTalkEnd")
			</Effect>
		</Event>
		<Event trigger="lichTalkEnd" once="true">
			<Effect>
				setCutsceneMode(false)
				
				unitSpeak("lich",_("Und jetzt werde ich der erste sein, der einen Weg findet, wie Gezeichnete zu toeten sind."), "angry")
			</Effect>
		</Event>
		
		<Event trigger="unit_hit">
			<Condition>
				return (trigger.defender == defend_dwall_tmp.lich)
			</Condition>
			<Effect>
				local lich = trigger.defender
				--local hp = get(lich, "health")
				--local mhp = get(lich, "max_health")
				local percent = get(lich, "health")/ get(lich, "max_health")
				--print(hp.."/"..mhp.." => "..percent.."%");
				if((0.85 >= percent) and (defend_dwall_tmp.lich85 ~= true))then
					defend_dwall_tmp.lich85 = true;
					insertTrigger("under85");
				elseif((0.75 >= percent) and (defend_dwall_tmp.lich75 ~= true))then
					defend_dwall_tmp.lich75 = true;
					insertTrigger("under75");
				elseif((0.60 >= percent) and (defend_dwall_tmp.lich60 ~= true))then
					defend_dwall_tmp.lich60 = true;
					insertTrigger("under60");
				elseif((0.5 >= percent) and (defend_dwall_tmp.lich50 ~= true))then
					defend_dwall_tmp.lich50 = true;
					insertTrigger("under50");
				elseif((0.4 >= percent) and (defend_dwall_tmp.lich40 ~= true))then
					defend_dwall_tmp.lich40 = true;
					insertTrigger("under40");
				elseif((0.25 >= percent) and (defend_dwall_tmp.lich25 ~= true))then
					defend_dwall_tmp.lich25 = true;
					insertTrigger("under25");
				elseif((0.15 >= percent) and (defend_dwall_tmp.lich15 ~= true))then
					defend_dwall_tmp.lich15 = true;
					insertTrigger("under15");
				end;
			</Effect>
		</Event>
		<Event trigger="under85" once="true">
			<Effect>
				print("lich unlocked homing icicle")
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_guided_icicle",2)
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_icicle",0)
			</Effect>
		</Event>
		<Event trigger="under75" once="true">
			<Effect>
				print("lich unlocked obelisk")
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_summon_skel",0)
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_ice_obelisk",3)
			</Effect>
		</Event>
		<Event trigger="under60" once="true">
			<Effect>
				print("lich unlocked homing iceball")
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_guided_icicle",0)
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_guided_iceball",2)
			</Effect>
		</Event>
		<Event trigger="under50" once="true">
			<Effect>
				print("lich switched to icedamage and invoked icearmor")
				set(defend_dwall_tmp.lich,"ai_ability_rating:attack",0)
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_ice_attack",1)
				setObjectFlag(defend_dwall_tmp.lich, "frost");
			</Effect>
		</Event>
		<Event trigger="under40" once="true">
			<Effect>
				print("lich unlocked icewave")
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_ice_obelisk",0)
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_frost_wave",3)
			</Effect>
		</Event>
		<Event trigger="under25" once="true">
			<Effect>
				print("lich unlocked meteor")
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_guided_iceball",0)
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_meteor",3)
			</Effect>
		</Event>
		<Event trigger="under15" once="true">
			<Effect>
				fadeIn(1500,{0.15,0.15,0.15},{0.7,0.7,0.7},{0.1,0.1,0.1})
				addUnitCommand(defend_dwall_tmp.lich,"asoroth_call_army")
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_frost_wave",-100)
				set(defend_dwall_tmp.lich,"ai_ability_rating:asoroth_black_storm",3)
			</Effect>
		</Event>
		
		<Event trigger="unit_die" once="true">
			<Condition>
				return(trigger.unit == defend_dwall_tmp.lich)
			</Condition>
			<Effect>
				defend_dwall.finished = true;
			
				fadeIn(12000,{0.4,0.4,0.4},{1,1,1},{0.3,0.3,0.3})
				local monsters = getMonstersInArea("areaGathering");
				for i,monster in ipairs(monsters) do
					set(monster, "health",0);
				end;
				
				setCutsceneMode(true)
				local position1 = get(getPartyleader(),"position");
				local position2 = get(defend_dwall_tmp.lich,"position");
				
				addCameraPosition(0, position1,-90, 65, 16);
				addCameraPosition(1500,position2,-90, 45, 12);
				unitSpeak(defend_dwall_tmp.lich,_("Nein! Das kann nicht sein! Ihr elenden..."),"panic")
				
				groupObjectsArc(getPlayers(),"locParty","locParty",3, 360);
				
				initDialog();
				speakPause(7000);
				changeTopic("demoFinished");
			</Effect>
		</Event>
		<Event trigger="demoFinished" once="true">
			<Effect>
				addCameraPosition(1500,"locParty",-90, 55, 14);
				--speaker1 => erklaerbaer
				local speaker1 = getPlayers()[1]
				local speaker2 = getSpeaker("arcopt");
				local speaker3 = getSpeaker("priopt");
				local speaker4 = getSpeaker("magopt");
				if(solo())then
					defend_dwall_tmp.soren = createObject("sorenCrystal","locParty");
					speaker2 = defend_dwall_tmp.soren;
				elseif(speaker2==speaker1)then
					speaker2 = getPlayers()[2];
				end;
				if(speaker3==speaker2)then
					speaker3=speaker1;
				end;
				if(speaker4==speaker3)then
					speaker4=speaker2;
				end;
				print("speakers distributed")
				addSpeaker(speaker1,"s1");
				addSpeaker(speaker2,"s2");
				addSpeaker(speaker3,"s3");
				addSpeaker(speaker4,"s4");
				
				speak("s1",_("Das waere geschafft."),"wounded2")
				speak("s4",_("Wie bitte? Das soll wohl ein Witz sein!"),"unhappy")
				speak("s4",_("Die Verteidigung von Zwergentrutz war nur zum aufwaermen, schon vergessen?"),"unhappy")
				speak("s1",_("Wenn du willst, dass es schneller geht, dann hilf doch einfach mit."),"grin")
				speak("s3",_("Oder besuch mal www.sumwars.org und sieh im Forum vorbei. Kritik, Hinweise und Kommentare sind immer gern gesehen."),"thoughtful")
				speak("s2",_("Gibt's dafuer auch Geld??"),"surprised")
				speak("s1",_("Natuerlich nicht. Oder hast du was hierfuer bezahlt?"),"unhappy")
				speak("s3",_("Aber die Goetter werden sich ewig deiner erinnern."),"excited")
				speak("s1",_("Damit ist die Demo offiziell vorbei."),"amused")
				changeTopic("endScene")
			</Effect>
		</Event>

		<Event trigger="endScene" once="true">
			<Effect>
				if(defend_dwall_tmp.soren ~=nil)then
					deleteObject(defend_dwall_tmp.soren)
				end;
				setCutsceneMode(false);
			</Effect>
		</Event>
	</Region>
</Quest>
