//
// The caster material. Put this as the shadow caster.
//
material SW/OgreBased/DepthShadowmap/Caster/Float_CG
{
	technique
	{
		pass
		{
			vertex_program_ref SW/OgreBased/DepthShadowmap/CasterVP_CG
			{
			}
			fragment_program_ref SW/OgreBased/DepthShadowmap/CasterFP_CG
			{
			}
		}
	}
}


// Basic materials which support shadows as a seperate scheme
material SW/OgreBased/DepthShadowmap/BasicTemplateMaterial_CG
{
    // This technique supports dynamic shadows
    technique
    {
      // ap: link to caster material
      shadow_caster_material SW/OgreBased/DepthShadowmap/Caster/Float_CG
      
        // Base ambient pass
        pass Ambient
        {
            // base colours, not needed for rendering, but as information
            // to lighting pass categorisation routine
            ambient 1 1 1
            diffuse 0 0 0 
            specular 0 0 0 0 
            // Really basic vertex program
            vertex_program_ref SW/OgreBased/BasicVertexPrograms/AmbientOneTexture_CG
            {
            }
        }
        // Now do the lighting pass
        // NB we don't do decal texture here because this is repeated per light
        pass Lighting
        {
            // base colours, not needed for rendering, but as information
            // to lighting pass categorisation routine
            ambient 0 0 0 
 
            // do this for each light
            iteration once_per_light
 
            scene_blend add
 
            // Vertex program reference
            vertex_program_ref SW/OgreBased/DepthShadowmap/ReceiverVP_CG
            {
            }
 
            // Fragment program
            fragment_program_ref SW/OgreBased/DepthShadowmap/ReceiverFP_CG
            {
            }
 
            texture_unit
            {
                content_type shadow
                tex_address_mode clamp
                filtering none
            }
        }
 
        // Decal pass
        pass Decal
        {
            // base colours, not needed for rendering, but as information
            // to lighting pass categorisation routine
            lighting off
            // Really basic vertex program
            vertex_program_ref SW/OgreBased/BasicVertexPrograms/AmbientOneTexture_CG
            {
                param_named ambient float4 1 1 1 1
            }
            scene_blend modulate
 
            texture_unit
            {
                texture_alias MainTexture
                tex_address_mode clamp
            }
        }
    }
}